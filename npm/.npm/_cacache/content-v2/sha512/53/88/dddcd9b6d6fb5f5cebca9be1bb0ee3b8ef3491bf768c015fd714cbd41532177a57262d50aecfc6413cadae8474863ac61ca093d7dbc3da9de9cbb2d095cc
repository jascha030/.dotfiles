{"maintainers":[{"name":"ponJenkinsIntegration","email":"info@pondevelopment.com"}],"dist-tags":{"latest":"1.2.1"},"versions":{"1.2.0":{"name":"mind-module-error-handling","version":"1.2.0","scripts":{"build":"ngc -p tsconfig.json","lint":"tslint --type-check --project tsconfig.json src/**/*.ts","test":"tsc && karma start","test-singlerun":"tsc && karma start --single-run"},"publishConfig":{"registry":"https://nexusrepo.pondevelopment.com/repository/mind-npm/"},"repository":{"type":"git","url":"git+ssh://git@bitbucket.org/pondevelopment/mind-module-error-handling.git"},"author":{"name":"Han van Venrooij","email":"han.van.venrooij@pon.com"},"keywords":["angular"],"license":"MIT","bugs":{"url":"https://pondevelopment.atlassian.net/"},"main":"dist/index.js","module":"dist/index.js","types":"dist/index.d.ts","peerDependencies":{"@angular/common":"4.4.3","@angular/core":"4.4.3","rxjs":"^5.1.0","zone.js":"^0.8.4"},"devDependencies":{"@angular/common":"4.4.3","@angular/compiler":"4.4.3","@angular/compiler-cli":"4.4.3","@angular/core":"4.4.3","@angular/platform-browser":"^4.0.0","@angular/platform-browser-dynamic":"^4.0.0","@types/jasmine":"2.5.38","@types/node":"~6.0.60","jasmine-core":"~2.5.2","jasmine-spec-reporter":"~3.2.0","karma":"~1.4.1","karma-cli":"~1.0.1","karma-coverage":"^1.1.1","karma-coverage-istanbul-reporter":"^0.2.0","karma-jasmine":"~1.1.0","karma-jasmine-html-reporter":"^0.2.2","karma-phantomjs-launcher":"^1.0.4","karma-typescript":"^3.0.0","karma-typescript-angular2-transform":"^1.0.0","protractor":"~5.1.0","rxjs":"^5.1.0","ts-mockito":"^1.2.0","ts-node":"~2.0.0","tslint":"~4.5.0","typescript":"~2.2.0","codelyzer":"~3.0.1","zone.js":"^0.8.4"},"engines":{"node":">=6.0.0"},"readme":"# mind-module-error-handling\n\nThis module implements a framework for error handling \n\n### Usage\n\nFirst you should install the module\n\n```npm install --save mind-module-error-handling```\n\nThen extend the `MindErrorHandler` for your application and implement the following methods:\n\n```typescript\nclass MyErrorHandler extends MindErrorHandler {\n  protected handleNetworkError(networkError: NetworkError) { /*TODO*/};\n  protected handleStorageError(storageError: StorageError) { /*TODO*/};\n  protected handleAuthError(authError: AuthError) { /*TODO*/};\n  protected handleVehicleError(vehicleError: VehicleError) { /*TODO*/};\n  protected handleTripError(tripError: TripError) { /*TODO*/};\n  protected handleHttpError(httpError: HttpError) { /*TODO*/};\n\n  protected showGenericErrorMessage(error: MindError) { /*TODO*/};\n}\n```\n\nOnce you have an instance of your error handler, whenever you then get an error from one of the mind modules, simply pass it through the error handler's `handle` method:\n \n ```typescript\nservice.request().catch(myErrorHandlerInstance.handle);\n```\n\n## Development\n\nTo generate all `*.js`, `*.js.map` and `*.d.ts` files:\n\n```bash\n$ npm run tsc\n```\n\nAfterwards, the compiled `js` files can be found in the `./dist` directory.\n\nTo lint all `*.ts` files:\n\n```bash\n$ npm run lint\n```\n\nDuring development the unit tests can automatically be run using PhantomJS:\n\n```bash\n$ npm test\n```\n\nWhen a file has been changed/added/deleted, the tests will automatically be rerun.\n\nThe coverage of the tests will be monitored. The results can be found in: `./coverage/PhantomJS <some version and platform>/index.html`. To view the results, simply open this file in your favorite browser (supporting javascript).\n\nTo test your changes locally in an angular app, you could link this module to your global `node_modules` without publishing the module:\n\n```bash\n$ cd /path/to/mind-module-error-handling/\n$ npm link\n$ cd /path/to/your/angular2/app/\n$ npm link mind-module-error-handling\n```\n\nThis will create a symlink between the mind-module-error-handling and the `node_modules` of your angular 2 app.\n\n## License\n\nMIT © [Mind mobility](mailto:info@mindmobility.nl)","readmeFilename":"README.md","gitHead":"0245d02403c6d0985494f32a0c5c779549cd8ab3","description":"This module implements a framework for error handling","homepage":"https://bitbucket.org/pondevelopment/mind-module-error-handling#readme","_id":"mind-module-error-handling@1.2.0","_npmVersion":"5.6.0","_nodeVersion":"7.8.0","_npmUser":{"name":"ponJenkinsIntegration","email":"info@pondevelopment.com"},"maintainers":[{"name":"ponJenkinsIntegration","email":"info@pondevelopment.com"}],"dist":{"integrity":"sha512-49axGL7UdbtxbCgnFsPvxrir29vXgFKSN9DNecqq4yW80JsgSPbOucsBDPOZKJZuObWDXeyIV6xW20n0fuDAfg==","shasum":"84b7b01a40debff347f8e49698a9ccf070e6b286","tarball":"https://nexusrepo.pondevelopment.com/repository/npm-all/mind-module-error-handling/-/mind-module-error-handling-1.2.0.tgz"}},"1.2.1":{"name":"mind-module-error-handling","version":"1.2.1","scripts":{"build":"ngc -p tsconfig.json","lint":"tslint --type-check --project tsconfig.json src/**/*.ts","test":"tsc && karma start","test-singlerun":"tsc && karma start --single-run"},"publishConfig":{"registry":"https://nexusrepo.pondevelopment.com/repository/mind-npm/"},"repository":{"type":"git","url":"git+ssh://git@bitbucket.org/pondevelopment/mind-module-error-handling.git"},"author":{"name":"Han van Venrooij","email":"han.van.venrooij@pon.com"},"keywords":["angular"],"license":"MIT","bugs":{"url":"https://pondevelopment.atlassian.net/"},"main":"dist/index.js","module":"dist/index.js","types":"dist/index.d.ts","peerDependencies":{"@angular/common":"4.4.3","@angular/core":"4.4.3","rxjs":"^5.1.0","zone.js":"^0.8.4"},"devDependencies":{"@angular/common":"4.4.3","@angular/compiler":"4.4.3","@angular/compiler-cli":"4.4.3","@angular/core":"4.4.3","@angular/platform-browser":"^4.0.0","@angular/platform-browser-dynamic":"^4.0.0","@types/jasmine":"2.5.38","@types/node":"~6.0.60","jasmine-core":"~2.5.2","jasmine-spec-reporter":"~3.2.0","karma":"~1.4.1","karma-cli":"~1.0.1","karma-coverage":"^1.1.1","karma-coverage-istanbul-reporter":"^0.2.0","karma-jasmine":"~1.1.0","karma-jasmine-html-reporter":"^0.2.2","karma-phantomjs-launcher":"^1.0.4","karma-typescript":"^3.0.0","karma-typescript-angular2-transform":"^1.0.0","protractor":"~5.1.0","rxjs":"^5.1.0","ts-mockito":"^1.2.0","ts-node":"~2.0.0","tslint":"~4.5.0","typescript":"~2.2.0","codelyzer":"~3.0.1","zone.js":"^0.8.4"},"engines":{"node":">=6.0.0"},"gitHead":"174d7a98a7249b2f079f43181ae90ad95a6ef0fe","readme":"# mind-module-error-handling\n\nThis module implements a framework for error handling \n\n### Usage\n\nFirst you should install the module\n\n```npm install --save mind-module-error-handling```\n\nThen extend the `MindErrorHandler` for your application and implement the following methods:\n\n```typescript\nclass MyErrorHandler extends MindErrorHandler {\n  protected handleNetworkError(networkError: NetworkError) { /*TODO*/};\n  protected handleStorageError(storageError: StorageError) { /*TODO*/};\n  protected handleAuthError(authError: AuthError) { /*TODO*/};\n  protected handleVehicleError(vehicleError: VehicleError) { /*TODO*/};\n  protected handleTripError(tripError: TripError) { /*TODO*/};\n  protected handleHttpError(httpError: HttpError) { /*TODO*/};\n\n  protected showGenericErrorMessage(error: MindError) { /*TODO*/};\n}\n```\n\nOnce you have an instance of your error handler, whenever you then get an error from one of the mind modules, simply pass it through the error handler's `handle` method:\n \n ```typescript\nservice.request().catch(myErrorHandlerInstance.handle);\n```\n\n## Development\n\nTo generate all `*.js`, `*.js.map` and `*.d.ts` files:\n\n```bash\n$ npm run tsc\n```\n\nAfterwards, the compiled `js` files can be found in the `./dist` directory.\n\nTo lint all `*.ts` files:\n\n```bash\n$ npm run lint\n```\n\nDuring development the unit tests can automatically be run using PhantomJS:\n\n```bash\n$ npm test\n```\n\nWhen a file has been changed/added/deleted, the tests will automatically be rerun.\n\nThe coverage of the tests will be monitored. The results can be found in: `./coverage/PhantomJS <some version and platform>/index.html`. To view the results, simply open this file in your favorite browser (supporting javascript).\n\nTo test your changes locally in an angular app, you could link this module to your global `node_modules` without publishing the module:\n\n```bash\n$ cd /path/to/mind-module-error-handling/\n$ npm link\n$ cd /path/to/your/angular2/app/\n$ npm link mind-module-error-handling\n```\n\nThis will create a symlink between the mind-module-error-handling and the `node_modules` of your angular 2 app.\n\n## License\n\nMIT © [Mind mobility](mailto:info@mindmobility.nl)","readmeFilename":"README.md","description":"This module implements a framework for error handling","homepage":"https://bitbucket.org/pondevelopment/mind-module-error-handling#readme","_id":"mind-module-error-handling@1.2.1","_npmVersion":"5.6.0","_nodeVersion":"8.11.4","_npmUser":{"name":"ponJenkinsIntegration","email":"info@pondevelopment.com"},"maintainers":[{"name":"ponJenkinsIntegration","email":"info@pondevelopment.com"}],"dist":{"integrity":"sha512-fyhHz41eL+CjG/hjXp4PustjiOiveJi2EzxXkJST+CyuOyCilBnAHBQlR1X11A0rH9JsXt//+JsMYL9o44D19g==","shasum":"5afb4d7507260ccca48d9c631b8eefc6558bf350","tarball":"https://nexusrepo.pondevelopment.com/repository/npm-all/mind-module-error-handling/-/mind-module-error-handling-1.2.1.tgz"}}},"name":"mind-module-error-handling","_rev":"545","description":"This module implements a framework for error handling","readme":"# mind-module-error-handling\n\nThis module implements a framework for error handling \n\n### Usage\n\nFirst you should install the module\n\n```npm install --save mind-module-error-handling```\n\nThen extend the `MindErrorHandler` for your application and implement the following methods:\n\n```typescript\nclass MyErrorHandler extends MindErrorHandler {\n  protected handleNetworkError(networkError: NetworkError) { /*TODO*/};\n  protected handleStorageError(storageError: StorageError) { /*TODO*/};\n  protected handleAuthError(authError: AuthError) { /*TODO*/};\n  protected handleVehicleError(vehicleError: VehicleError) { /*TODO*/};\n  protected handleTripError(tripError: TripError) { /*TODO*/};\n  protected handleHttpError(httpError: HttpError) { /*TODO*/};\n\n  protected showGenericErrorMessage(error: MindError) { /*TODO*/};\n}\n```\n\nOnce you have an instance of your error handler, whenever you then get an error from one of the mind modules, simply pass it through the error handler's `handle` method:\n \n ```typescript\nservice.request().catch(myErrorHandlerInstance.handle);\n```\n\n## Development\n\nTo generate all `*.js`, `*.js.map` and `*.d.ts` files:\n\n```bash\n$ npm run tsc\n```\n\nAfterwards, the compiled `js` files can be found in the `./dist` directory.\n\nTo lint all `*.ts` files:\n\n```bash\n$ npm run lint\n```\n\nDuring development the unit tests can automatically be run using PhantomJS:\n\n```bash\n$ npm test\n```\n\nWhen a file has been changed/added/deleted, the tests will automatically be rerun.\n\nThe coverage of the tests will be monitored. The results can be found in: `./coverage/PhantomJS <some version and platform>/index.html`. To view the results, simply open this file in your favorite browser (supporting javascript).\n\nTo test your changes locally in an angular app, you could link this module to your global `node_modules` without publishing the module:\n\n```bash\n$ cd /path/to/mind-module-error-handling/\n$ npm link\n$ cd /path/to/your/angular2/app/\n$ npm link mind-module-error-handling\n```\n\nThis will create a symlink between the mind-module-error-handling and the `node_modules` of your angular 2 app.\n\n## License\n\nMIT © [Mind mobility](mailto:info@mindmobility.nl)","time":{"created":"2019-03-06T12:00:53.422Z","modified":"2019-03-19T13:06:32.666Z","1.2.0":"2019-03-06T12:00:53.422Z","1.2.1":"2019-03-19T13:06:32.666Z"},"_id":"mind-module-error-handling"}