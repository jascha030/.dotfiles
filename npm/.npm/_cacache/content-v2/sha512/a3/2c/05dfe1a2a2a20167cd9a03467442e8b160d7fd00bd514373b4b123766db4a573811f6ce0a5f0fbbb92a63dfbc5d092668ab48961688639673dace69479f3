{"maintainers":[{"name":"alexlamsl","email":"alexlamsl@gmail.com"}],"keywords":["uglify","uglify-es","uglify-js","minify","minifier","javascript","ecmascript","es5","es6","es7","es8","es2015","es2016","es2017","async","await"],"dist-tags":{"latest":"3.3.9"},"author":{"name":"Mihai Bazon","email":"mihai.bazon@gmail.com","url":"http://lisperator.net/"},"_rev":"799","description":"JavaScript parser, mangler/compressor and beautifier toolkit for ES6+","readme":"uglify-es\n=========\n\nA JavaScript parser, mangler/compressor and beautifier toolkit for ES6+.\n\n#### Note:\n- **`uglify-es` is API/CLI compatible with `uglify-js@3`.**\n- **`uglify-es` is not backwards compatible with `uglify-js@2`.**\n\nInstall\n-------\n\nFirst make sure you have installed the latest version of [node.js](http://nodejs.org/)\n(You may need to restart your computer after this step).\n\nFrom NPM for use as a command line app:\n\n    npm install uglify-es -g\n\nFrom NPM for programmatic use:\n\n    npm install uglify-es\n\n# Command line usage\n\n    uglifyjs [input files] [options]\n\nUglifyJS can take multiple input files.  It's recommended that you pass the\ninput files first, then pass the options.  UglifyJS will parse input files\nin sequence and apply any compression options.  The files are parsed in the\nsame global scope, that is, a reference from a file to some\nvariable/function declared in another file will be matched properly.\n\nIf no input file is specified, UglifyJS will read from STDIN.\n\nIf you wish to pass your options before the input files, separate the two with\na double dash to prevent input files being used as option arguments:\n\n    uglifyjs --compress --mangle -- input.js\n\n### Command line options\n\n```\n    -h, --help                  Print usage information.\n                                `--help options` for details on available options.\n    -V, --version               Print version number.\n    -p, --parse <options>       Specify parser options:\n                                `acorn`  Use Acorn for parsing.\n                                `bare_returns`  Allow return outside of functions.\n                                                Useful when minifying CommonJS\n                                                modules and Userscripts that may\n                                                be anonymous function wrapped (IIFE)\n                                                by the .user.js engine `caller`.\n                                `expression`  Parse a single expression, rather than\n                                              a program (for parsing JSON).\n                                `spidermonkey`  Assume input files are SpiderMonkey\n                                                AST format (as JSON).\n    -c, --compress [options]    Enable compressor/specify compressor options:\n                                `pure_funcs`  List of functions that can be safely\n                                              removed when their return values are\n                                              not used.\n    -m, --mangle [options]      Mangle names/specify mangler options:\n                                `reserved`  List of names that should not be mangled.\n    --mangle-props [options]    Mangle properties/specify mangler options:\n                                `builtins`  Mangle property names that overlaps\n                                            with standard JavaScript globals.\n                                `debug`  Add debug prefix and suffix.\n                                `domprops`  Mangle property names that overlaps\n                                            with DOM properties.\n                                `keep_quoted`  Only mangle unquoted properties.\n                                `regex`  Only mangle matched property names.\n                                `reserved`  List of names that should not be mangled.\n    -b, --beautify [options]    Beautify output/specify output options:\n                                `beautify`  Enabled with `--beautify` by default.\n                                `preamble`  Preamble to prepend to the output. You\n                                            can use this to insert a comment, for\n                                            example for licensing information.\n                                            This will not be parsed, but the source\n                                            map will adjust for its presence.\n                                `quote_style`  Quote style:\n                                               0 - auto\n                                               1 - single\n                                               2 - double\n                                               3 - original\n                                `wrap_iife`  Wrap IIFEs in parenthesis. Note: you may\n                                             want to disable `negate_iife` under\n                                             compressor options.\n    -o, --output <file>         Output file path (default STDOUT). Specify `ast` or\n                                `spidermonkey` to write UglifyJS or SpiderMonkey AST\n                                as JSON to STDOUT respectively.\n    --comments [filter]         Preserve copyright comments in the output. By\n                                default this works like Google Closure, keeping\n                                JSDoc-style comments that contain \"@license\" or\n                                \"@preserve\". You can optionally pass one of the\n                                following arguments to this flag:\n                                - \"all\" to keep all comments\n                                - a valid JS RegExp like `/foo/` or `/^!/` to\n                                keep only matching comments.\n                                Note that currently not *all* comments can be\n                                kept when compression is on, because of dead\n                                code removal or cascading statements into\n                                sequences.\n    --config-file <file>        Read `minify()` options from JSON file.\n    -d, --define <expr>[=value] Global definitions.\n    --ecma <version>            Specify ECMAScript release: 5, 6, 7 or 8.\n    --ie8                       Support non-standard Internet Explorer 8.\n                                Equivalent to setting `ie8: true` in `minify()`\n                                for `compress`, `mangle` and `output` options.\n                                By default UglifyJS will not try to be IE-proof.\n    --keep-classnames           Do not mangle/drop class names.\n    --keep-fnames               Do not mangle/drop function names.  Useful for\n                                code relying on Function.prototype.name.\n    --name-cache <file>         File to hold mangled name mappings.\n    --safari10                  Support non-standard Safari 10/11.\n                                Equivalent to setting `safari10: true` in `minify()`\n                                for `mangle` and `output` options.\n                                By default `uglify-es` will not work around\n                                Safari 10/11 bugs.\n    --self                      Build UglifyJS as a library (implies --wrap UglifyJS)\n    --source-map [options]      Enable source map/specify source map options:\n                                `base`  Path to compute relative paths from input files.\n                                `content`  Input source map, useful if you're compressing\n                                           JS that was generated from some other original\n                                           code. Specify \"inline\" if the source map is\n                                           included within the sources.\n                                `filename`  Name and/or location of the output source.\n                                `includeSources`  Pass this flag if you want to include\n                                                  the content of source files in the\n                                                  source map as sourcesContent property.\n                                `root`  Path to the original source to be included in\n                                        the source map.\n                                `url`  If specified, path to the source map to append in\n                                       `//# sourceMappingURL`.\n    --timings                   Display operations run time on STDERR.\n    --toplevel                  Compress and/or mangle variables in top level scope.\n    --verbose                   Print diagnostic messages.\n    --warn                      Print warning messages.\n    --wrap <name>               Embed everything in a big function, making the\n                                “exports” and “global” variables available. You\n                                need to pass an argument to this option to\n                                specify the name that your module will take\n                                when included in, say, a browser.\n```\n\nSpecify `--output` (`-o`) to declare the output file.  Otherwise the output\ngoes to STDOUT.\n\n## CLI source map options\n\nUglifyJS can generate a source map file, which is highly useful for\ndebugging your compressed JavaScript.  To get a source map, pass\n`--source-map --output output.js` (source map will be written out to\n`output.js.map`).\n\nAdditional options:\n\n- `--source-map \"filename='<NAME>'\"` to specify the name of the source map.\n\n- `--source-map \"root='<URL>'\"` to pass the URL where the original files can be found.\n\n- `--source-map \"url='<URL>'\"` to specify the URL where the source map can be found.\n  Otherwise UglifyJS assumes HTTP `X-SourceMap` is being used and will omit the\n  `//# sourceMappingURL=` directive.\n\nFor example:\n\n    uglifyjs js/file1.js js/file2.js \\\n             -o foo.min.js -c -m \\\n             --source-map \"root='http://foo.com/src',url='foo.min.js.map'\"\n\nThe above will compress and mangle `file1.js` and `file2.js`, will drop the\noutput in `foo.min.js` and the source map in `foo.min.js.map`.  The source\nmapping will refer to `http://foo.com/src/js/file1.js` and\n`http://foo.com/src/js/file2.js` (in fact it will list `http://foo.com/src`\nas the source map root, and the original files as `js/file1.js` and\n`js/file2.js`).\n\n### Composed source map\n\nWhen you're compressing JS code that was output by a compiler such as\nCoffeeScript, mapping to the JS code won't be too helpful.  Instead, you'd\nlike to map back to the original code (i.e. CoffeeScript).  UglifyJS has an\noption to take an input source map.  Assuming you have a mapping from\nCoffeeScript → compiled JS, UglifyJS can generate a map from CoffeeScript →\ncompressed JS by mapping every token in the compiled JS to its original\nlocation.\n\nTo use this feature pass `--source-map \"content='/path/to/input/source.map'\"`\nor `--source-map \"content=inline\"` if the source map is included inline with\nthe sources.\n\n## CLI compress options\n\nYou need to pass `--compress` (`-c`) to enable the compressor.  Optionally\nyou can pass a comma-separated list of [compress options](#compress-options).\n\nOptions are in the form `foo=bar`, or just `foo` (the latter implies\na boolean option that you want to set `true`; it's effectively a\nshortcut for `foo=true`).\n\nExample:\n\n    uglifyjs file.js -c toplevel,sequences=false\n\n## CLI mangle options\n\nTo enable the mangler you need to pass `--mangle` (`-m`).  The following\n(comma-separated) options are supported:\n\n- `toplevel` (default `false`) -- mangle names declared in the top level scope.\n\n- `eval` (default `false`) -- mangle names visible in scopes where `eval` or `with` are used.\n\nWhen mangling is enabled but you want to prevent certain names from being\nmangled, you can declare those names with `--mangle reserved` — pass a\ncomma-separated list of names.  For example:\n\n    uglifyjs ... -m reserved=['$','require','exports']\n\nto prevent the `require`, `exports` and `$` names from being changed.\n\n### CLI mangling property names (`--mangle-props`)\n\n**Note:** THIS WILL PROBABLY BREAK YOUR CODE.  Mangling property names\nis a separate step, different from variable name mangling.  Pass\n`--mangle-props` to enable it.  It will mangle all properties in the\ninput code with the exception of built in DOM properties and properties\nin core JavaScript classes.  For example:\n\n```javascript\n// example.js\nvar x = {\n    baz_: 0,\n    foo_: 1,\n    calc: function() {\n        return this.foo_ + this.baz_;\n    }\n};\nx.bar_ = 2;\nx[\"baz_\"] = 3;\nconsole.log(x.calc());\n```\nMangle all properties (except for JavaScript `builtins`):\n```bash\n$ uglifyjs example.js -c -m --mangle-props\n```\n```javascript\nvar x={o:0,_:1,l:function(){return this._+this.o}};x.t=2,x.o=3,console.log(x.l());\n```\nMangle all properties except for `reserved` properties:\n```bash\n$ uglifyjs example.js -c -m --mangle-props reserved=[foo_,bar_]\n```\n```javascript\nvar x={o:0,foo_:1,_:function(){return this.foo_+this.o}};x.bar_=2,x.o=3,console.log(x._());\n```\nMangle all properties matching a `regex`:\n```bash\n$ uglifyjs example.js -c -m --mangle-props regex=/_$/\n```\n```javascript\nvar x={o:0,_:1,calc:function(){return this._+this.o}};x.l=2,x.o=3,console.log(x.calc());\n```\n\nCombining mangle properties options:\n```bash\n$ uglifyjs example.js -c -m --mangle-props regex=/_$/,reserved=[bar_]\n```\n```javascript\nvar x={o:0,_:1,calc:function(){return this._+this.o}};x.bar_=2,x.o=3,console.log(x.calc());\n```\n\nIn order for this to be of any use, we avoid mangling standard JS names by\ndefault (`--mangle-props builtins` to override).\n\nA default exclusion file is provided in `tools/domprops.json` which should\ncover most standard JS and DOM properties defined in various browsers.  Pass\n`--mangle-props domprops` to disable this feature.\n\nA regular expression can be used to define which property names should be\nmangled.  For example, `--mangle-props regex=/^_/` will only mangle property\nnames that start with an underscore.\n\nWhen you compress multiple files using this option, in order for them to\nwork together in the end we need to ensure somehow that one property gets\nmangled to the same name in all of them.  For this, pass `--name-cache filename.json`\nand UglifyJS will maintain these mappings in a file which can then be reused.\nIt should be initially empty.  Example:\n\n```bash\n$ rm -f /tmp/cache.json  # start fresh\n$ uglifyjs file1.js file2.js --mangle-props --name-cache /tmp/cache.json -o part1.js\n$ uglifyjs file3.js file4.js --mangle-props --name-cache /tmp/cache.json -o part2.js\n```\n\nNow, `part1.js` and `part2.js` will be consistent with each other in terms\nof mangled property names.\n\nUsing the name cache is not necessary if you compress all your files in a\nsingle call to UglifyJS.\n\n### Mangling unquoted names (`--mangle-props keep_quoted`)\n\nUsing quoted property name (`o[\"foo\"]`) reserves the property name (`foo`)\nso that it is not mangled throughout the entire script even when used in an\nunquoted style (`o.foo`). Example:\n\n```javascript\n// stuff.js\nvar o = {\n    \"foo\": 1,\n    bar: 3\n};\no.foo += o.bar;\nconsole.log(o.foo);\n```\n```bash\n$ uglifyjs stuff.js --mangle-props keep_quoted -c -m\n```\n```javascript\nvar o={foo:1,o:3};o.foo+=o.o,console.log(o.foo);\n```\n\n### Debugging property name mangling\n\nYou can also pass `--mangle-props debug` in order to mangle property names\nwithout completely obscuring them. For example the property `o.foo`\nwould mangle to `o._$foo$_` with this option. This allows property mangling\nof a large codebase while still being able to debug the code and identify\nwhere mangling is breaking things.\n\n```bash\n$ uglifyjs stuff.js --mangle-props debug -c -m\n```\n```javascript\nvar o={_$foo$_:1,_$bar$_:3};o._$foo$_+=o._$bar$_,console.log(o._$foo$_);\n```\n\nYou can also pass a custom suffix using `--mangle-props debug=XYZ`. This would then\nmangle `o.foo` to `o._$foo$XYZ_`. You can change this each time you compile a\nscript to identify how a property got mangled. One technique is to pass a\nrandom number on every compile to simulate mangling changing with different\ninputs (e.g. as you update the input script with new properties), and to help\nidentify mistakes like writing mangled keys to storage.\n\n\n# API Reference\n\nAssuming installation via NPM, you can load UglifyJS in your application\nlike this:\n```javascript\nvar UglifyJS = require(\"uglify-es\");\n```\n\nThere is a single high level function, **`minify(code, options)`**,\nwhich will perform all minification [phases](#minify-options) in a configurable\nmanner. By default `minify()` will enable the options [`compress`](#compress-options)\nand [`mangle`](#mangle-options). Example:\n```javascript\nvar code = \"function add(first, second) { return first + second; }\";\nvar result = UglifyJS.minify(code);\nconsole.log(result.error); // runtime error, or `undefined` if no error\nconsole.log(result.code);  // minified output: function add(n,d){return n+d}\n```\n\nYou can `minify` more than one JavaScript file at a time by using an object\nfor the first argument where the keys are file names and the values are source\ncode:\n```javascript\nvar code = {\n    \"file1.js\": \"function add(first, second) { return first + second; }\",\n    \"file2.js\": \"console.log(add(1 + 2, 3 + 4));\"\n};\nvar result = UglifyJS.minify(code);\nconsole.log(result.code);\n// function add(d,n){return d+n}console.log(add(3,7));\n```\n\nThe `toplevel` option:\n```javascript\nvar code = {\n    \"file1.js\": \"function add(first, second) { return first + second; }\",\n    \"file2.js\": \"console.log(add(1 + 2, 3 + 4));\"\n};\nvar options = { toplevel: true };\nvar result = UglifyJS.minify(code, options);\nconsole.log(result.code);\n// console.log(3+7);\n```\n\nThe `nameCache` option:\n```javascript\nvar options = {\n    mangle: {\n        toplevel: true,\n    },\n    nameCache: {}\n};\nvar result1 = UglifyJS.minify({\n    \"file1.js\": \"function add(first, second) { return first + second; }\"\n}, options);\nvar result2 = UglifyJS.minify({\n    \"file2.js\": \"console.log(add(1 + 2, 3 + 4));\"\n}, options);\nconsole.log(result1.code);\n// function n(n,r){return n+r}\nconsole.log(result2.code);\n// console.log(n(3,7));\n```\n\nYou may persist the name cache to the file system in the following way:\n```javascript\nvar cacheFileName = \"/tmp/cache.json\";\nvar options = {\n    mangle: {\n        properties: true,\n    },\n    nameCache: JSON.parse(fs.readFileSync(cacheFileName, \"utf8\"))\n};\nfs.writeFileSync(\"part1.js\", UglifyJS.minify({\n    \"file1.js\": fs.readFileSync(\"file1.js\", \"utf8\"),\n    \"file2.js\": fs.readFileSync(\"file2.js\", \"utf8\")\n}, options).code, \"utf8\");\nfs.writeFileSync(\"part2.js\", UglifyJS.minify({\n    \"file3.js\": fs.readFileSync(\"file3.js\", \"utf8\"),\n    \"file4.js\": fs.readFileSync(\"file4.js\", \"utf8\")\n}, options).code, \"utf8\");\nfs.writeFileSync(cacheFileName, JSON.stringify(options.nameCache), \"utf8\");\n```\n\nAn example of a combination of `minify()` options:\n```javascript\nvar code = {\n    \"file1.js\": \"function add(first, second) { return first + second; }\",\n    \"file2.js\": \"console.log(add(1 + 2, 3 + 4));\"\n};\nvar options = {\n    toplevel: true,\n    compress: {\n        global_defs: {\n            \"@console.log\": \"alert\"\n        },\n        passes: 2\n    },\n    output: {\n        beautify: false,\n        preamble: \"/* uglified */\"\n    }\n};\nvar result = UglifyJS.minify(code, options);\nconsole.log(result.code);\n// /* uglified */\n// alert(10);\"\n```\n\nTo produce warnings:\n```javascript\nvar code = \"function f(){ var u; return 2 + 3; }\";\nvar options = { warnings: true };\nvar result = UglifyJS.minify(code, options);\nconsole.log(result.error);    // runtime error, `undefined` in this case\nconsole.log(result.warnings); // [ 'Dropping unused variable u [0:1,18]' ]\nconsole.log(result.code);     // function f(){return 5}\n```\n\nAn error example:\n```javascript\nvar result = UglifyJS.minify({\"foo.js\" : \"if (0) else console.log(1);\"});\nconsole.log(JSON.stringify(result.error));\n// {\"message\":\"Unexpected token: keyword (else)\",\"filename\":\"foo.js\",\"line\":1,\"col\":7,\"pos\":7}\n```\nNote: unlike `uglify-js@2.x`, the `3.x` API does not throw errors. To\nachieve a similar effect one could do the following:\n```javascript\nvar result = UglifyJS.minify(code, options);\nif (result.error) throw result.error;\n```\n\n## Minify options\n\n- `ecma` (default `undefined`) - pass `5`, `6`, `7` or `8` to override `parse`,\n  `compress` and `output` options.\n\n- `warnings` (default `false`) — pass `true` to return compressor warnings\n  in `result.warnings`. Use the value `\"verbose\"` for more detailed warnings.\n\n- `parse` (default `{}`) — pass an object if you wish to specify some\n  additional [parse options](#parse-options).\n\n- `compress` (default `{}`) — pass `false` to skip compressing entirely.\n  Pass an object to specify custom [compress options](#compress-options).\n\n- `mangle` (default `true`) — pass `false` to skip mangling names, or pass\n  an object to specify [mangle options](#mangle-options) (see below).\n\n  - `mangle.properties` (default `false`) — a subcategory of the mangle option.\n    Pass an object to specify custom [mangle property options](#mangle-properties-options).\n\n- `output` (default `null`) — pass an object if you wish to specify\n  additional [output options](#output-options).  The defaults are optimized\n  for best compression.\n\n- `sourceMap` (default `false`) - pass an object if you wish to specify\n  [source map options](#source-map-options).\n\n- `toplevel` (default `false`) - set to `true` if you wish to enable top level\n  variable and function name mangling and to drop unused variables and functions.\n\n- `nameCache` (default `null`) - pass an empty object `{}` or a previously\n  used `nameCache` object if you wish to cache mangled variable and\n  property names across multiple invocations of `minify()`. Note: this is\n  a read/write property. `minify()` will read the name cache state of this\n  object and update it during minification so that it may be\n  reused or externally persisted by the user.\n\n- `ie8` (default `false`) - set to `true` to support IE8.\n\n- `keep_classnames` (default: `undefined`) - pass `true` to prevent discarding or mangling\n  of class names.\n\n- `keep_fnames` (default: `false`) - pass `true` to prevent discarding or mangling\n  of function names.  Useful for code relying on `Function.prototype.name`. If the\n  top level minify option `keep_classnames` is `undefined` it will be overriden with\n  the value of the top level minify option `keep_fnames`.\n\n- `safari10` (default: `false`) - pass `true` to work around Safari 10/11 bugs in\n  loop scoping and `await`. See `safari10` options in [`mangle`](#mangle-options)\n  and [`output`](#output-options) for details.\n\n## Minify options structure\n\n```javascript\n{\n    parse: {\n        // parse options\n    },\n    compress: {\n        // compress options\n    },\n    mangle: {\n        // mangle options\n\n        properties: {\n            // mangle property options\n        }\n    },\n    output: {\n        // output options\n    },\n    sourceMap: {\n        // source map options\n    },\n    ecma: 5, // specify one of: 5, 6, 7 or 8\n    keep_classnames: false,\n    keep_fnames: false,\n    ie8: false,\n    nameCache: null, // or specify a name cache object\n    safari10: false,\n    toplevel: false,\n    warnings: false,\n}\n```\n\n### Source map options\n\nTo generate a source map:\n```javascript\nvar result = UglifyJS.minify({\"file1.js\": \"var a = function() {};\"}, {\n    sourceMap: {\n        filename: \"out.js\",\n        url: \"out.js.map\"\n    }\n});\nconsole.log(result.code); // minified output\nconsole.log(result.map);  // source map\n```\n\nNote that the source map is not saved in a file, it's just returned in\n`result.map`.  The value passed for `sourceMap.url` is only used to set\n`//# sourceMappingURL=out.js.map` in `result.code`. The value of\n`filename` is only used to set `file` attribute (see [the spec][sm-spec])\nin source map file.\n\nYou can set option `sourceMap.url` to be `\"inline\"` and source map will\nbe appended to code.\n\nYou can also specify sourceRoot property to be included in source map:\n```javascript\nvar result = UglifyJS.minify({\"file1.js\": \"var a = function() {};\"}, {\n    sourceMap: {\n        root: \"http://example.com/src\",\n        url: \"out.js.map\"\n    }\n});\n```\n\nIf you're compressing compiled JavaScript and have a source map for it, you\ncan use `sourceMap.content`:\n```javascript\nvar result = UglifyJS.minify({\"compiled.js\": \"compiled code\"}, {\n    sourceMap: {\n        content: \"content from compiled.js.map\",\n        url: \"minified.js.map\"\n    }\n});\n// same as before, it returns `code` and `map`\n```\n\nIf you're using the `X-SourceMap` header instead, you can just omit `sourceMap.url`.\n\n## Parse options\n\n- `bare_returns` (default `false`) -- support top level `return` statements\n\n- `ecma` (default: `8`) -- specify one of `5`, `6`, `7` or `8`. Note: this setting\n  is not presently enforced except for ES8 optional trailing commas in function\n  parameter lists and calls with `ecma` `8`.\n\n- `html5_comments` (default `true`)\n\n- `shebang` (default `true`) -- support `#!command` as the first line\n\n## Compress options\n\n- `arrows` (default: `true`) -- Converts `()=>{return x}` to `()=>x`. Class\n  and object literal methods will also be converted to arrow expressions if\n  the resultant code is shorter: `m(){return x}` becomes `m:()=>x`.\n  This transform requires that the `ecma` compress option is set to `6` or greater.\n\n- `booleans` (default: `true`) -- various optimizations for boolean context,\n  for example `!!a ? b : c → a ? b : c`\n\n- `collapse_vars` (default: `true`) -- Collapse single-use non-constant variables,\n  side effects permitting.\n\n- `comparisons` (default: `true`) -- apply certain optimizations to binary nodes,\n  e.g. `!(a <= b) → a > b` (only when `unsafe_comps`), attempts to negate binary\n  nodes, e.g. `a = !b && !c && !d && !e → a=!(b||c||d||e)` etc.\n\n- `computed_props` (default: `true`) -- Transforms constant computed properties\n  into regular ones: `{[\"computed\"]: 1}` is converted to `{computed: 1}`.\n\n- `conditionals` (default: `true`) -- apply optimizations for `if`-s and conditional\n  expressions\n\n- `dead_code` (default: `true`) -- remove unreachable code\n\n- `drop_console` (default: `false`) -- Pass `true` to discard calls to\n  `console.*` functions. If you wish to drop a specific function call\n  such as `console.info` and/or retain side effects from function arguments\n  after dropping the function call then use `pure_funcs` instead.\n\n- `drop_debugger` (default: `true`) -- remove `debugger;` statements\n\n- `ecma` (default: `5`) -- Pass `6` or greater to enable `compress` options that\n  will transform ES5 code into smaller ES6+ equivalent forms.\n\n- `evaluate` (default: `true`) -- attempt to evaluate constant expressions\n\n- `expression` (default: `false`) -- Pass `true` to preserve completion values\n  from terminal statements without `return`, e.g. in bookmarklets.\n\n- `global_defs` (default: `{}`) -- see [conditional compilation](#conditional-compilation)\n\n- `hoist_funs` (default: `false`) -- hoist function declarations\n\n- `hoist_props` (default: `true`) -- hoist properties from constant object and\n  array literals into regular variables subject to a set of constraints. For example:\n  `var o={p:1, q:2}; f(o.p, o.q);` is converted to `f(1, 2);`. Note: `hoist_props`\n  works best with `mangle` enabled, the `compress` option `passes` set to `2` or higher,\n  and the `compress` option `toplevel` enabled.\n\n- `hoist_vars` (default: `false`) -- hoist `var` declarations (this is `false`\n  by default because it seems to increase the size of the output in general)\n\n- `if_return` (default: `true`) -- optimizations for if/return and if/continue\n\n- `inline` (default: `true`) -- inline calls to function with simple/`return` statement:\n  - `false` -- same as `0`\n  - `0` -- disabled inlining\n  - `1` -- inline simple functions\n  - `2` -- inline functions with arguments\n  - `3` -- inline functions with arguments and variables\n  - `true` -- same as `3`\n\n- `join_vars` (default: `true`) -- join consecutive `var` statements\n\n- `keep_classnames` (default: `false`) -- Pass `true` to prevent the\n  compressor from discarding class names.  See also: the `keep_classnames`\n  [mangle option](#mangle).\n\n- `keep_fargs` (default: `true`) -- Prevents the compressor from discarding unused\n  function arguments.  You need this for code which relies on `Function.length`.\n\n- `keep_fnames` (default: `false`) -- Pass `true` to prevent the\n  compressor from discarding function names.  Useful for code relying on\n  `Function.prototype.name`. See also: the `keep_fnames` [mangle option](#mangle).\n\n- `keep_infinity` (default: `false`) -- Pass `true` to prevent `Infinity` from\n  being compressed into `1/0`, which may cause performance issues on Chrome.\n\n- `loops` (default: `true`) -- optimizations for `do`, `while` and `for` loops\n  when we can statically determine the condition.\n\n- `negate_iife` (default: `true`) -- negate \"Immediately-Called Function Expressions\"\n  where the return value is discarded, to avoid the parens that the\n  code generator would insert.\n\n- `passes` (default: `1`) -- The maximum number of times to run compress.\n  In some cases more than one pass leads to further compressed code.  Keep in\n  mind more passes will take more time.\n\n- `properties` (default: `true`) -- rewrite property access using the dot notation, for\n  example `foo[\"bar\"] → foo.bar`\n\n- `pure_funcs` (default: `null`) -- You can pass an array of names and\n  UglifyJS will assume that those functions do not produce side\n  effects.  DANGER: will not check if the name is redefined in scope.\n  An example case here, for instance `var q = Math.floor(a/b)`.  If\n  variable `q` is not used elsewhere, UglifyJS will drop it, but will\n  still keep the `Math.floor(a/b)`, not knowing what it does.  You can\n  pass `pure_funcs: [ 'Math.floor' ]` to let it know that this\n  function won't produce any side effect, in which case the whole\n  statement would get discarded.  The current implementation adds some\n  overhead (compression will be slower).\n\n- `pure_getters` (default: `\"strict\"`) -- If you pass `true` for\n  this, UglifyJS will assume that object property access\n  (e.g. `foo.bar` or `foo[\"bar\"]`) doesn't have any side effects.\n  Specify `\"strict\"` to treat `foo.bar` as side-effect-free only when\n  `foo` is certain to not throw, i.e. not `null` or `undefined`.\n\n- `reduce_funcs` (default: `true`) -- Allows single-use functions to be\n  inlined as function expressions when permissible allowing further\n  optimization.  Enabled by default.  Option depends on `reduce_vars`\n  being enabled.  Some code runs faster in the Chrome V8 engine if this\n  option is disabled.  Does not negatively impact other major browsers.\n\n- `reduce_vars` (default: `true`) -- Improve optimization on variables assigned with and\n  used as constant values.\n\n- `sequences` (default: `true`) -- join consecutive simple statements using the\n  comma operator.  May be set to a positive integer to specify the maximum number\n  of consecutive comma sequences that will be generated. If this option is set to\n  `true` then the default `sequences` limit is `200`. Set option to `false` or `0`\n  to disable. The smallest `sequences` length is `2`. A `sequences` value of `1`\n  is grandfathered to be equivalent to `true` and as such means `200`. On rare\n  occasions the default sequences limit leads to very slow compress times in which\n  case a value of `20` or less is recommended.\n\n- `side_effects` (default: `true`) -- Pass `false` to disable potentially dropping\n  functions marked as \"pure\".  A function call is marked as \"pure\" if a comment\n  annotation `/*@__PURE__*/` or `/*#__PURE__*/` immediately precedes the call. For\n  example: `/*@__PURE__*/foo();`\n\n- `switches` (default: `true`) -- de-duplicate and remove unreachable `switch` branches\n\n- `toplevel` (default: `false`) -- drop unreferenced functions (`\"funcs\"`) and/or\n  variables (`\"vars\"`) in the top level scope (`false` by default, `true` to drop\n  both unreferenced functions and variables)\n\n- `top_retain` (default: `null`) -- prevent specific toplevel functions and\n  variables from `unused` removal (can be array, comma-separated, RegExp or\n  function. Implies `toplevel`)\n\n- `typeofs` (default: `true`) -- Transforms `typeof foo == \"undefined\"` into\n  `foo === void 0`.  Note: recommend to set this value to `false` for IE10 and\n  earlier versions due to known issues.\n\n- `unsafe` (default: `false`) -- apply \"unsafe\" transformations (discussion below)\n\n- `unsafe_arrows` (default: `false`) -- Convert ES5 style anonymous function\n  expressions to arrow functions if the function body does not reference `this`.\n  Note: it is not always safe to perform this conversion if code relies on the\n  the function having a `prototype`, which arrow functions lack.\n  This transform requires that the `ecma` compress option is set to `6` or greater.\n\n- `unsafe_comps` (default: `false`) -- Reverse `<` and `<=` to `>` and `>=` to\n  allow improved compression. This might be unsafe when an at least one of two\n  operands is an object with computed values due the use of methods like `get`,\n  or `valueOf`. This could cause change in execution order after operands in the\n  comparison are switching. Compression only works if both `comparisons` and\n  `unsafe_comps` are both set to true.\n\n- `unsafe_Function` (default: `false`) -- compress and mangle `Function(args, code)`\n  when both `args` and `code` are string literals.\n\n- `unsafe_math` (default: `false`) -- optimize numerical expressions like\n  `2 * x * 3` into `6 * x`, which may give imprecise floating point results.\n\n- `unsafe_methods` (default: false) -- Converts `{ m: function(){} }` to\n  `{ m(){} }`. `ecma` must be set to `6` or greater to enable this transform.\n  If `unsafe_methods` is a RegExp then key/value pairs with keys matching the\n  RegExp will be converted to concise methods.\n  Note: if enabled there is a risk of getting a \"`<method name>` is not a\n  constructor\" TypeError should any code try to `new` the former function.\n\n- `unsafe_proto` (default: `false`) -- optimize expressions like\n  `Array.prototype.slice.call(a)` into `[].slice.call(a)`\n\n- `unsafe_regexp` (default: `false`) -- enable substitutions of variables with\n  `RegExp` values the same way as if they are constants.\n\n- `unsafe_undefined` (default: `false`) -- substitute `void 0` if there is a\n  variable named `undefined` in scope (variable name will be mangled, typically\n  reduced to a single character)\n\n- `unused` (default: `true`) -- drop unreferenced functions and variables (simple\n  direct variable assignments do not count as references unless set to `\"keep_assign\"`)\n\n- `warnings` (default: `false`) -- display warnings when dropping unreachable\n  code or unused declarations etc.\n\n## Mangle options\n\n- `eval` (default `false`) -- Pass `true` to mangle names visible in scopes\n  where `eval` or `with` are used.\n\n- `keep_classnames` (default `false`) -- Pass `true` to not mangle class names.\n  See also: the `keep_classnames` [compress option](#compress-options).\n\n- `keep_fnames` (default `false`) -- Pass `true` to not mangle function names.\n  Useful for code relying on `Function.prototype.name`. See also: the `keep_fnames`\n  [compress option](#compress-options).\n\n- `reserved` (default `[]`) -- Pass an array of identifiers that should be\n  excluded from mangling. Example: `[\"foo\", \"bar\"]`.\n\n- `toplevel` (default `false`) -- Pass `true` to mangle names declared in the\n  top level scope.\n\n- `safari10` (default `false`) -- Pass `true` to work around the Safari 10 loop\n  iterator [bug](https://bugs.webkit.org/show_bug.cgi?id=171041)\n  \"Cannot declare a let variable twice\".\n  See also: the `safari10` [output option](#output-options).\n\nExamples:\n\n```javascript\n// test.js\nvar globalVar;\nfunction funcName(firstLongName, anotherLongName) {\n    var myVariable = firstLongName +  anotherLongName;\n}\n```\n```javascript\nvar code = fs.readFileSync(\"test.js\", \"utf8\");\n\nUglifyJS.minify(code).code;\n// 'function funcName(a,n){}var globalVar;'\n\nUglifyJS.minify(code, { mangle: { reserved: ['firstLongName'] } }).code;\n// 'function funcName(firstLongName,a){}var globalVar;'\n\nUglifyJS.minify(code, { mangle: { toplevel: true } }).code;\n// 'function n(n,a){}var a;'\n```\n\n### Mangle properties options\n\n- `builtins` (default: `false`) -- Use `true` to allow the mangling of builtin\n  DOM properties. Not recommended to override this setting.\n\n- `debug` (default: `false`) -— Mangle names with the original name still present.\n  Pass an empty string `\"\"` to enable, or a non-empty string to set the debug suffix.\n\n- `keep_quoted` (default: `false`) -— Only mangle unquoted property names.\n\n- `regex` (default: `null`) -— Pass a RegExp literal to only mangle property\n  names matching the regular expression.\n\n- `reserved` (default: `[]`) -- Do not mangle property names listed in the\n  `reserved` array.\n\n## Output options\n\nThe code generator tries to output shortest code possible by default.  In\ncase you want beautified output, pass `--beautify` (`-b`).  Optionally you\ncan pass additional arguments that control the code output:\n\n- `ascii_only` (default `false`) -- escape Unicode characters in strings and\n  regexps (affects directives with non-ascii characters becoming invalid)\n\n- `beautify` (default `true`) -- whether to actually beautify the output.\n  Passing `-b` will set this to true, but you might need to pass `-b` even\n  when you want to generate minified code, in order to specify additional\n  arguments, so you can use `-b beautify=false` to override it.\n\n- `bracketize` (default `false`) -- always insert brackets in `if`, `for`,\n  `do`, `while` or `with` statements, even if their body is a single\n  statement.\n\n- `comments` (default `false`) -- pass `true` or `\"all\"` to preserve all\n  comments, `\"some\"` to preserve some comments, a regular expression string\n  (e.g. `/^!/`) or a function.\n\n- `ecma` (default `5`) -- set output printing mode. Set `ecma` to `6` or\n  greater to emit shorthand object properties - i.e.: `{a}` instead of `{a: a}`.\n  The `ecma` option will only change the output in direct control of the\n  beautifier. Non-compatible features in the abstract syntax tree will still\n  be output as is. For example: an `ecma` setting of `5` will **not** convert\n  ES6+ code to ES5.\n\n- `indent_level` (default `4`)\n\n- `indent_start` (default `0`) -- prefix all lines by that many spaces\n\n- `inline_script` (default `false`) -- escape the slash in occurrences of\n  `</script` in strings\n\n- `keep_quoted_props` (default `false`) -- when turned on, prevents stripping\n  quotes from property names in object literals.\n\n- `max_line_len` (default `false`) -- maximum line length (for uglified code)\n\n- `preamble` (default `null`) -- when passed it must be a string and\n  it will be prepended to the output literally.  The source map will\n  adjust for this text.  Can be used to insert a comment containing\n  licensing information, for example.\n\n- `preserve_line` (default `false`) -- pass `true` to preserve lines, but it\n  only works if `beautify` is set to `false`.\n\n- `quote_keys` (default `false`) -- pass `true` to quote all keys in literal\n  objects\n\n- `quote_style` (default `0`) -- preferred quote style for strings (affects\n  quoted property names and directives as well):\n  - `0` -- prefers double quotes, switches to single quotes when there are\n    more double quotes in the string itself. `0` is best for gzip size.\n  - `1` -- always use single quotes\n  - `2` -- always use double quotes\n  - `3` -- always use the original quotes\n\n- `safari10` (default `false`) -- set this option to `true` to work around\n  the [Safari 10/11 await bug](https://bugs.webkit.org/show_bug.cgi?id=176685).\n  See also: the `safari10` [mangle option](#mangle-options).\n\n- `semicolons` (default `true`) -- separate statements with semicolons.  If\n  you pass `false` then whenever possible we will use a newline instead of a\n  semicolon, leading to more readable output of uglified code (size before\n  gzip could be smaller; size after gzip insignificantly larger).\n\n- `shebang` (default `true`) -- preserve shebang `#!` in preamble (bash scripts)\n\n- `webkit` (default `false`) -- enable workarounds for WebKit bugs.\n  PhantomJS users should set this option to `true`.\n\n- `width` (default `80`) -- only takes effect when beautification is on, this\n  specifies an (orientative) line width that the beautifier will try to\n  obey.  It refers to the width of the line text (excluding indentation).\n  It doesn't work very well currently, but it does make the code generated\n  by UglifyJS more readable.\n\n- `wrap_iife` (default `false`) -- pass `true` to wrap immediately invoked\n  function expressions. See\n  [#640](https://github.com/mishoo/UglifyJS2/issues/640) for more details.\n\n# Miscellaneous\n\n### Keeping copyright notices or other comments\n\nYou can pass `--comments` to retain certain comments in the output.  By\ndefault it will keep JSDoc-style comments that contain \"@preserve\",\n\"@license\" or \"@cc_on\" (conditional compilation for IE).  You can pass\n`--comments all` to keep all the comments, or a valid JavaScript regexp to\nkeep only comments that match this regexp.  For example `--comments /^!/`\nwill keep comments like `/*! Copyright Notice */`.\n\nNote, however, that there might be situations where comments are lost.  For\nexample:\n```javascript\nfunction f() {\n    /** @preserve Foo Bar */\n    function g() {\n        // this function is never called\n    }\n    return something();\n}\n```\n\nEven though it has \"@preserve\", the comment will be lost because the inner\nfunction `g` (which is the AST node to which the comment is attached to) is\ndiscarded by the compressor as not referenced.\n\nThe safest comments where to place copyright information (or other info that\nneeds to be kept in the output) are comments attached to toplevel nodes.\n\n### The `unsafe` `compress` option\n\nIt enables some transformations that *might* break code logic in certain\ncontrived cases, but should be fine for most code.  You might want to try it\non your own code, it should reduce the minified size.  Here's what happens\nwhen this flag is on:\n\n- `new Array(1, 2, 3)` or `Array(1, 2, 3)` → `[ 1, 2, 3 ]`\n- `new Object()` → `{}`\n- `String(exp)` or `exp.toString()` → `\"\" + exp`\n- `new Object/RegExp/Function/Error/Array (...)` → we discard the `new`\n\n### Conditional compilation\n\nYou can use the `--define` (`-d`) switch in order to declare global\nvariables that UglifyJS will assume to be constants (unless defined in\nscope).  For example if you pass `--define DEBUG=false` then, coupled with\ndead code removal UglifyJS will discard the following from the output:\n```javascript\nif (DEBUG) {\n    console.log(\"debug stuff\");\n}\n```\n\nYou can specify nested constants in the form of `--define env.DEBUG=false`.\n\nUglifyJS will warn about the condition being always false and about dropping\nunreachable code; for now there is no option to turn off only this specific\nwarning, you can pass `warnings=false` to turn off *all* warnings.\n\nAnother way of doing that is to declare your globals as constants in a\nseparate file and include it into the build.  For example you can have a\n`build/defines.js` file with the following:\n```javascript\nvar DEBUG = false;\nvar PRODUCTION = true;\n// etc.\n```\n\nand build your code like this:\n\n    uglifyjs build/defines.js js/foo.js js/bar.js... -c\n\nUglifyJS will notice the constants and, since they cannot be altered, it\nwill evaluate references to them to the value itself and drop unreachable\ncode as usual.  The build will contain the `const` declarations if you use\nthem. If you are targeting < ES6 environments which does not support `const`,\nusing `var` with `reduce_vars` (enabled by default) should suffice.\n\n### Conditional compilation API\n\nYou can also use conditional compilation via the programmatic API. With the difference that the\nproperty name is `global_defs` and is a compressor property:\n\n```javascript\nvar result = UglifyJS.minify(fs.readFileSync(\"input.js\", \"utf8\"), {\n    compress: {\n        dead_code: true,\n        global_defs: {\n            DEBUG: false\n        }\n    }\n});\n```\n\nTo replace an identifier with an arbitrary non-constant expression it is\nnecessary to prefix the `global_defs` key with `\"@\"` to instruct UglifyJS\nto parse the value as an expression:\n```javascript\nUglifyJS.minify(\"alert('hello');\", {\n    compress: {\n        global_defs: {\n            \"@alert\": \"console.log\"\n        }\n    }\n}).code;\n// returns: 'console.log(\"hello\");'\n```\n\nOtherwise it would be replaced as string literal:\n```javascript\nUglifyJS.minify(\"alert('hello');\", {\n    compress: {\n        global_defs: {\n            \"alert\": \"console.log\"\n        }\n    }\n}).code;\n// returns: '\"console.log\"(\"hello\");'\n```\n\n### Using native Uglify AST with `minify()`\n```javascript\n// example: parse only, produce native Uglify AST\n\nvar result = UglifyJS.minify(code, {\n    parse: {},\n    compress: false,\n    mangle: false,\n    output: {\n        ast: true,\n        code: false  // optional - faster if false\n    }\n});\n\n// result.ast contains native Uglify AST\n```\n```javascript\n// example: accept native Uglify AST input and then compress and mangle\n//          to produce both code and native AST.\n\nvar result = UglifyJS.minify(ast, {\n    compress: {},\n    mangle: {},\n    output: {\n        ast: true,\n        code: true  // optional - faster if false\n    }\n});\n\n// result.ast contains native Uglify AST\n// result.code contains the minified code in string form.\n```\n\n### Working with Uglify AST\n\nTransversal and transformation of the native AST can be performed through\n[`TreeWalker`](http://lisperator.net/uglifyjs/walk) and\n[`TreeTransformer`](http://lisperator.net/uglifyjs/transform) respectively.\n\n### ESTree / SpiderMonkey AST\n\nUglifyJS has its own abstract syntax tree format; for\n[practical reasons](http://lisperator.net/blog/uglifyjs-why-not-switching-to-spidermonkey-ast/)\nwe can't easily change to using the SpiderMonkey AST internally.  However,\nUglifyJS now has a converter which can import a SpiderMonkey AST.\n\nFor example [Acorn][acorn] is a super-fast parser that produces a\nSpiderMonkey AST.  It has a small CLI utility that parses one file and dumps\nthe AST in JSON on the standard output.  To use UglifyJS to mangle and\ncompress that:\n\n    acorn file.js | uglifyjs -p spidermonkey -m -c\n\nThe `-p spidermonkey` option tells UglifyJS that all input files are not\nJavaScript, but JS code described in SpiderMonkey AST in JSON.  Therefore we\ndon't use our own parser in this case, but just transform that AST into our\ninternal AST.\n\n### Use Acorn for parsing\n\nMore for fun, I added the `-p acorn` option which will use Acorn to do all\nthe parsing.  If you pass this option, UglifyJS will `require(\"acorn\")`.\n\nAcorn is really fast (e.g. 250ms instead of 380ms on some 650K code), but\nconverting the SpiderMonkey tree that Acorn produces takes another 150ms so\nin total it's a bit more than just using UglifyJS's own parser.\n\n[acorn]: https://github.com/ternjs/acorn\n[sm-spec]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k\n\n### Uglify Fast Minify Mode\n\nIt's not well known, but whitespace removal and symbol mangling accounts\nfor 95% of the size reduction in minified code for most JavaScript - not\nelaborate code transforms. One can simply disable `compress` to speed up\nUglify builds by 3 to 4 times. In this fast `mangle`-only mode Uglify has\ncomparable minify speeds and gzip sizes to\n[`butternut`](https://www.npmjs.com/package/butternut):\n\n| d3.js | minify size | gzip size | minify time (seconds) |\n| --- | ---: | ---: | ---: |\n| original | 451,131 | 108,733 | - |\n| uglify-js@3.0.24 mangle=false, compress=false | 316,600 | 85,245 | 0.70 |\n| uglify-js@3.0.24 mangle=true, compress=false | 220,216 | 72,730 | 1.13 |\n| butternut@0.4.6 | 217,568 | 72,738 | 1.41 |\n| uglify-js@3.0.24 mangle=true, compress=true | 212,511 | 71,560 | 3.36 |\n| babili@0.1.4 | 210,713 | 72,140 | 12.64 |\n\nTo enable fast minify mode from the CLI use:\n```\nuglifyjs file.js -m\n```\nTo enable fast minify mode with the API use:\n```js\nUglifyJS.minify(code, { compress: false, mangle: true });\n```\n\n#### Source maps and debugging\n\nVarious `compress` transforms that simplify, rearrange, inline and remove code\nare known to have an adverse effect on debugging with source maps. This is\nexpected as code is optimized and mappings are often simply not possible as\nsome code no longer exists. For highest fidelity in source map debugging\ndisable the Uglify `compress` option and just use `mangle`.\n\n### Compiler assumptions\n\nTo allow for better optimizations, the compiler makes various assumptions:\n\n- `.toString()` and `.valueOf()` don't have side effects, and for built-in\n  objects they have not been overridden.\n- `undefined`, `NaN` and `Infinity` have not been externally redefined.\n- `arguments.callee`, `arguments.caller` and `Function.prototype.caller` are not used.\n- The code doesn't expect the contents of `Function.prototype.toString()` or\n  `Error.prototype.stack` to be anything in particular.\n- Getting and setting properties on a plain object does not cause other side effects\n  (using `.watch()` or `Proxy`).\n- Object properties can be added, removed and modified (not prevented with\n  `Object.defineProperty()`, `Object.defineProperties()`, `Object.freeze()`,\n  `Object.preventExtensions()` or `Object.seal()`).\n","repository":{"type":"git","url":"git+https://github.com/mishoo/UglifyJS2.git#harmony"},"users":{"zigomir":true,"denji":true,"capaj":true,"dam":true,"isao":true,"nisimjoseph":true,"aquafadas":true,"diewland":true,"bsara":true,"taseenb":true,"dwqs":true,"tdmalone":true,"bumsuk":true,"alexbaumgertner":true,"leizongmin":true,"apisitter":true,"slance":true,"zhenguo.zhao":true,"xyyjk":true,"rogerta":true,"usex":true,"stevenvachon":true,"wujianfu":true,"dbuggerx":true,"shanewholloway":true,"adardesign":true,"saintspark":true},"bugs":{"url":"https://github.com/mishoo/UglifyJS2/issues"},"license":"BSD-2-Clause","versions":{"3.0.2":{"name":"uglify-es","description":"JavaScript parser, mangler/compressor and beautifier toolkit","homepage":"http://lisperator.net/uglifyjs","author":{"name":"Mihai Bazon","email":"mihai.bazon@gmail.com","url":"http://lisperator.net/"},"license":"BSD-2-Clause","version":"3.0.2","engines":{"node":">=0.8.0"},"maintainers":[{"name":"Mihai Bazon","email":"mihai.bazon@gmail.com","url":"http://lisperator.net/"}],"repository":{"type":"git","url":"git+https://github.com/mishoo/UglifyJS2.git"},"bugs":{"url":"https://github.com/mishoo/UglifyJS2/issues"},"main":"tools/node.js","bin":{"uglifyjs":"bin/uglifyjs"},"files":["bin","lib","tools","LICENSE"],"dependencies":{"commander":"~2.9.0","source-map":"~0.5.1","uglify-to-browserify":"~1.0.0"},"devDependencies":{"acorn":"~0.6.0","escodegen":"~1.3.3","esfuzz":"~0.3.1","estraverse":"~1.5.1","mocha":"~2.3.4"},"optionalDependencies":{"uglify-to-browserify":"~1.0.0"},"browserify":{"transform":["uglify-to-browserify"]},"scripts":{"test":"node test/run-tests.js"},"keywords":["uglify","uglify-js","minify","minifier"],"gitHead":"1e9ef17e32c67e3dc41b882fafa3564d2d236bf8","_id":"uglify-es@3.0.2","_shasum":"90b1a481b55d4cd2b26ed27b6c96ac247528231c","_from":".","_npmVersion":"4.2.0","_nodeVersion":"7.10.0","_npmUser":{"name":"alexlamsl","email":"alexlamsl@gmail.com"},"dist":{"shasum":"90b1a481b55d4cd2b26ed27b6c96ac247528231c","tarball":"https://nexusrepo.pondevelopment.com/repository/npm-all/uglify-es/-/uglify-es-3.0.2.tgz"},"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/uglify-es-3.0.2.tgz_1494357525006_0.6099987467750907"},"directories":{}},"3.0.3":{"name":"uglify-es","description":"JavaScript parser, mangler/compressor and beautifier toolkit","homepage":"http://lisperator.net/uglifyjs","author":{"name":"Mihai Bazon","email":"mihai.bazon@gmail.com","url":"http://lisperator.net/"},"license":"BSD-2-Clause","version":"3.0.3","engines":{"node":">=0.8.0"},"maintainers":[{"name":"alexlamsl","email":"alexlamsl@gmail.com"}],"repository":{"type":"git","url":"git+https://github.com/mishoo/UglifyJS2.git"},"bugs":{"url":"https://github.com/mishoo/UglifyJS2/issues"},"main":"tools/node.js","bin":{"uglifyjs":"bin/uglifyjs"},"files":["bin","lib","tools","LICENSE"],"dependencies":{"commander":"~2.9.0","source-map":"~0.5.1","uglify-to-browserify":"~1.0.0"},"devDependencies":{"acorn":"~0.6.0","escodegen":"~1.3.3","esfuzz":"~0.3.1","estraverse":"~1.5.1","mocha":"~2.3.4"},"optionalDependencies":{"uglify-to-browserify":"~1.0.0"},"browserify":{"transform":["uglify-to-browserify"]},"scripts":{"test":"node test/run-tests.js"},"keywords":["uglify","uglify-js","minify","minifier"],"gitHead":"e2888bdc437142e95695220ac3b53511ef6edc53","_id":"uglify-es@3.0.3","_shasum":"63cc84aa9468b34973a4887787c64c01a8a87576","_from":".","_npmVersion":"4.2.0","_nodeVersion":"7.10.0","_npmUser":{"name":"alexlamsl","email":"alexlamsl@gmail.com"},"dist":{"shasum":"63cc84aa9468b34973a4887787c64c01a8a87576","tarball":"https://nexusrepo.pondevelopment.com/repository/npm-all/uglify-es/-/uglify-es-3.0.3.tgz"},"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/uglify-es-3.0.3.tgz_1494408452767_0.8305631554685533"},"directories":{}},"3.0.4":{"name":"uglify-es","description":"JavaScript parser, mangler/compressor and beautifier toolkit","homepage":"http://lisperator.net/uglifyjs","author":{"name":"Mihai Bazon","email":"mihai.bazon@gmail.com","url":"http://lisperator.net/"},"license":"BSD-2-Clause","version":"3.0.4","engines":{"node":">=0.8.0"},"maintainers":[{"name":"alexlamsl","email":"alexlamsl@gmail.com"}],"repository":{"type":"git","url":"git+https://github.com/mishoo/UglifyJS2.git"},"bugs":{"url":"https://github.com/mishoo/UglifyJS2/issues"},"main":"tools/node.js","bin":{"uglifyjs":"bin/uglifyjs"},"files":["bin","lib","tools","LICENSE"],"dependencies":{"commander":"~2.9.0","source-map":"~0.5.1","uglify-to-browserify":"~1.0.0"},"devDependencies":{"acorn":"~0.6.0","escodegen":"~1.3.3","esfuzz":"~0.3.1","estraverse":"~1.5.1","mocha":"~2.3.4"},"optionalDependencies":{"uglify-to-browserify":"~1.0.0"},"browserify":{"transform":["uglify-to-browserify"]},"scripts":{"test":"node test/run-tests.js"},"keywords":["uglify","uglify-js","minify","minifier"],"gitHead":"945ba641609cea5c97bf8aa05d9afb00cd69471c","_id":"uglify-es@3.0.4","_shasum":"ae724bf50cdd6073d6615c4d7d28e387955f1007","_from":".","_npmVersion":"4.5.0","_nodeVersion":"8.0.0-nightly20170505fe44f54949","_npmUser":{"name":"alexlamsl","email":"alexlamsl@gmail.com"},"dist":{"shasum":"ae724bf50cdd6073d6615c4d7d28e387955f1007","tarball":"https://nexusrepo.pondevelopment.com/repository/npm-all/uglify-es/-/uglify-es-3.0.4.tgz"},"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/uglify-es-3.0.4.tgz_1494575408964_0.16504488326609135"},"directories":{}},"3.0.5":{"name":"uglify-es","description":"JavaScript parser, mangler/compressor and beautifier toolkit","homepage":"https://github.com/mishoo/UglifyJS2/tree/harmony","author":{"name":"Mihai Bazon","email":"mihai.bazon@gmail.com","url":"http://lisperator.net/"},"license":"BSD-2-Clause","version":"3.0.5","engines":{"node":">=0.8.0"},"maintainers":[{"name":"alexlamsl","email":"alexlamsl@gmail.com"}],"repository":{"type":"git","url":"git+https://github.com/mishoo/UglifyJS2.git"},"bugs":{"url":"https://github.com/mishoo/UglifyJS2/issues"},"main":"tools/node.js","bin":{"uglifyjs":"bin/uglifyjs"},"files":["bin","lib","tools","LICENSE"],"dependencies":{"commander":"~2.9.0","source-map":"~0.5.1"},"devDependencies":{"acorn":"~5.0.3","mocha":"~2.3.4"},"scripts":{"test":"node test/run-tests.js"},"keywords":["uglify","uglify-js","minify","minifier"],"gitHead":"756c9aa7dc9a034baf07b127b58d132dcbe9be4f","_id":"uglify-es@3.0.5","_shasum":"f430a5c84c83463f8114fcc75d961fc60513dbb7","_from":".","_npmVersion":"4.2.0","_nodeVersion":"7.10.0","_npmUser":{"name":"alexlamsl","email":"alexlamsl@gmail.com"},"dist":{"shasum":"f430a5c84c83463f8114fcc75d961fc60513dbb7","tarball":"https://nexusrepo.pondevelopment.com/repository/npm-all/uglify-es/-/uglify-es-3.0.5.tgz"},"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/uglify-es-3.0.5.tgz_1494858083101_0.9557125433348119"},"directories":{}},"3.0.7":{"name":"uglify-es","description":"JavaScript parser, mangler/compressor and beautifier toolkit","homepage":"https://github.com/mishoo/UglifyJS2/tree/harmony","author":{"name":"Mihai Bazon","email":"mihai.bazon@gmail.com","url":"http://lisperator.net/"},"license":"BSD-2-Clause","version":"3.0.7","engines":{"node":">=0.8.0"},"maintainers":[{"name":"alexlamsl","email":"alexlamsl@gmail.com"}],"repository":{"type":"git","url":"git+https://github.com/mishoo/UglifyJS2.git"},"bugs":{"url":"https://github.com/mishoo/UglifyJS2/issues"},"main":"tools/node.js","bin":{"uglifyjs":"bin/uglifyjs"},"files":["bin","lib","tools","LICENSE"],"dependencies":{"commander":"~2.9.0","source-map":"~0.5.1"},"devDependencies":{"acorn":"~5.0.3","mocha":"~2.3.4"},"scripts":{"test":"node test/run-tests.js"},"keywords":["uglify","uglify-js","minify","minifier"],"gitHead":"f751e64d49bec552ee2da891a439e8d079560ce5","_id":"uglify-es@3.0.7","_shasum":"62ce46b1791928738b86b204fb365c36267108be","_from":".","_npmVersion":"4.2.0","_nodeVersion":"7.10.0","_npmUser":{"name":"alexlamsl","email":"alexlamsl@gmail.com"},"dist":{"shasum":"62ce46b1791928738b86b204fb365c36267108be","tarball":"https://nexusrepo.pondevelopment.com/repository/npm-all/uglify-es/-/uglify-es-3.0.7.tgz"},"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/uglify-es-3.0.7.tgz_1494956187305_0.3707073451951146"},"directories":{}},"3.0.8":{"name":"uglify-es","description":"JavaScript parser, mangler/compressor and beautifier toolkit","homepage":"https://github.com/mishoo/UglifyJS2/tree/harmony","author":{"name":"Mihai Bazon","email":"mihai.bazon@gmail.com","url":"http://lisperator.net/"},"license":"BSD-2-Clause","version":"3.0.8","engines":{"node":">=0.8.0"},"maintainers":[{"name":"alexlamsl","email":"alexlamsl@gmail.com"}],"repository":{"type":"git","url":"git+https://github.com/mishoo/UglifyJS2.git"},"bugs":{"url":"https://github.com/mishoo/UglifyJS2/issues"},"main":"tools/node.js","bin":{"uglifyjs":"bin/uglifyjs"},"files":["bin","lib","tools","LICENSE"],"dependencies":{"commander":"~2.9.0","source-map":"~0.5.1"},"devDependencies":{"acorn":"~5.0.3","mocha":"~2.3.4","semver":"~5.3.0"},"scripts":{"test":"node test/run-tests.js"},"keywords":["uglify","uglify-js","minify","minifier"],"gitHead":"aaba482e4848a8bfd0ada96d1c845d378ae03aab","_id":"uglify-es@3.0.8","_shasum":"946659ff15ec61d55d7245ca485bdcdb613446f7","_from":".","_npmVersion":"4.2.0","_nodeVersion":"7.10.0","_npmUser":{"name":"alexlamsl","email":"alexlamsl@gmail.com"},"dist":{"shasum":"946659ff15ec61d55d7245ca485bdcdb613446f7","tarball":"https://nexusrepo.pondevelopment.com/repository/npm-all/uglify-es/-/uglify-es-3.0.8.tgz"},"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/uglify-es-3.0.8.tgz_1495096374725_0.5459866747260094"},"directories":{}},"3.0.9":{"name":"uglify-es","description":"JavaScript parser, mangler/compressor and beautifier toolkit","homepage":"https://github.com/mishoo/UglifyJS2/tree/harmony","author":{"name":"Mihai Bazon","email":"mihai.bazon@gmail.com","url":"http://lisperator.net/"},"license":"BSD-2-Clause","version":"3.0.9","engines":{"node":">=0.8.0"},"maintainers":[{"name":"alexlamsl","email":"alexlamsl@gmail.com"}],"repository":{"type":"git","url":"git+https://github.com/mishoo/UglifyJS2.git"},"bugs":{"url":"https://github.com/mishoo/UglifyJS2/issues"},"main":"tools/node.js","bin":{"uglifyjs":"bin/uglifyjs"},"files":["bin","lib","tools","LICENSE"],"dependencies":{"commander":"~2.9.0","source-map":"~0.5.1"},"devDependencies":{"acorn":"~5.0.3","mocha":"~2.3.4","semver":"~5.3.0"},"scripts":{"test":"node test/run-tests.js"},"keywords":["uglify","uglify-js","minify","minifier"],"gitHead":"9a074c26373cdfef974bf9d1397a5a20c3113e4d","_id":"uglify-es@3.0.9","_shasum":"b75ab668a9d960fa3c865897847157fd446b1517","_from":".","_npmVersion":"4.2.0","_nodeVersion":"7.10.0","_npmUser":{"name":"alexlamsl","email":"alexlamsl@gmail.com"},"dist":{"shasum":"b75ab668a9d960fa3c865897847157fd446b1517","tarball":"https://nexusrepo.pondevelopment.com/repository/npm-all/uglify-es/-/uglify-es-3.0.9.tgz"},"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/uglify-es-3.0.9.tgz_1495186726126_0.8725625483784825"},"directories":{}},"3.0.10":{"name":"uglify-es","description":"JavaScript parser, mangler/compressor and beautifier toolkit","homepage":"https://github.com/mishoo/UglifyJS2/tree/harmony","author":{"name":"Mihai Bazon","email":"mihai.bazon@gmail.com","url":"http://lisperator.net/"},"license":"BSD-2-Clause","version":"3.0.10","engines":{"node":">=0.8.0"},"maintainers":[{"name":"alexlamsl","email":"alexlamsl@gmail.com"}],"repository":{"type":"git","url":"git+https://github.com/mishoo/UglifyJS2.git"},"bugs":{"url":"https://github.com/mishoo/UglifyJS2/issues"},"main":"tools/node.js","bin":{"uglifyjs":"bin/uglifyjs"},"files":["bin","lib","tools","LICENSE"],"dependencies":{"commander":"~2.9.0","source-map":"~0.5.1"},"devDependencies":{"acorn":"~5.0.3","mocha":"~2.3.4","semver":"~5.3.0"},"scripts":{"test":"node test/run-tests.js"},"keywords":["uglify","uglify-js","uglify-es","minify","minifier","es5","es6","es2015"],"gitHead":"5b22334f3b935f8b68a240d2a71093132f58ddf1","_id":"uglify-es@3.0.10","_shasum":"8fc9b86f2b57b2805e8863a6fcde1a92210cb885","_from":".","_npmVersion":"4.2.0","_nodeVersion":"7.10.0","_npmUser":{"name":"alexlamsl","email":"alexlamsl@gmail.com"},"dist":{"shasum":"8fc9b86f2b57b2805e8863a6fcde1a92210cb885","tarball":"https://nexusrepo.pondevelopment.com/repository/npm-all/uglify-es/-/uglify-es-3.0.10.tgz"},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/uglify-es-3.0.10.tgz_1495312612058_0.702261911239475"},"directories":{}},"3.0.11":{"name":"uglify-es","description":"JavaScript parser, mangler/compressor and beautifier toolkit","homepage":"https://github.com/mishoo/UglifyJS2/tree/harmony","author":{"name":"Mihai Bazon","email":"mihai.bazon@gmail.com","url":"http://lisperator.net/"},"license":"BSD-2-Clause","version":"3.0.11","engines":{"node":">=0.8.0"},"maintainers":[{"name":"alexlamsl","email":"alexlamsl@gmail.com"}],"repository":{"type":"git","url":"git+https://github.com/mishoo/UglifyJS2.git"},"bugs":{"url":"https://github.com/mishoo/UglifyJS2/issues"},"main":"tools/node.js","bin":{"uglifyjs":"bin/uglifyjs"},"files":["bin","lib","tools","LICENSE"],"dependencies":{"commander":"~2.9.0","source-map":"~0.5.1"},"devDependencies":{"acorn":"~5.0.3","mocha":"~2.3.4","semver":"~5.3.0"},"scripts":{"test":"node test/run-tests.js"},"keywords":["uglify","uglify-js","uglify-es","minify","minifier","es5","es6","es2015"],"gitHead":"075b648bb1d50d5f2b4341ffb88c4da20a4b4e77","_id":"uglify-es@3.0.11","_shasum":"acc51dfd2eb3681a3620d9c64881c29d9159ef85","_from":".","_npmVersion":"4.2.0","_nodeVersion":"7.10.0","_npmUser":{"name":"alexlamsl","email":"alexlamsl@gmail.com"},"dist":{"shasum":"acc51dfd2eb3681a3620d9c64881c29d9159ef85","tarball":"https://nexusrepo.pondevelopment.com/repository/npm-all/uglify-es/-/uglify-es-3.0.11.tgz"},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/uglify-es-3.0.11.tgz_1495558673148_0.34632310713641346"},"directories":{}},"3.0.12":{"name":"uglify-es","description":"JavaScript parser, mangler/compressor and beautifier toolkit","homepage":"https://github.com/mishoo/UglifyJS2/tree/harmony","author":{"name":"Mihai Bazon","email":"mihai.bazon@gmail.com","url":"http://lisperator.net/"},"license":"BSD-2-Clause","version":"3.0.12","engines":{"node":">=0.8.0"},"maintainers":[{"name":"alexlamsl","email":"alexlamsl@gmail.com"}],"repository":{"type":"git","url":"git+https://github.com/mishoo/UglifyJS2.git"},"bugs":{"url":"https://github.com/mishoo/UglifyJS2/issues"},"main":"tools/node.js","bin":{"uglifyjs":"bin/uglifyjs"},"files":["bin","lib","tools","LICENSE"],"dependencies":{"commander":"~2.9.0","source-map":"~0.5.1"},"devDependencies":{"acorn":"~5.0.3","mocha":"~2.3.4","semver":"~5.3.0"},"scripts":{"test":"node test/run-tests.js"},"keywords":["uglify","uglify-js","uglify-es","minify","minifier","es5","es6","es2015"],"gitHead":"e5e0ce0b42307fe7d535376c39caa02d5d823fe2","_id":"uglify-es@3.0.12","_shasum":"7734f9bb64bbf36dbb1e059358343c58553e52c1","_from":".","_npmVersion":"4.2.0","_nodeVersion":"7.10.0","_npmUser":{"name":"alexlamsl","email":"alexlamsl@gmail.com"},"dist":{"shasum":"7734f9bb64bbf36dbb1e059358343c58553e52c1","tarball":"https://nexusrepo.pondevelopment.com/repository/npm-all/uglify-es/-/uglify-es-3.0.12.tgz"},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/uglify-es-3.0.12.tgz_1495905996408_0.06362887052819133"},"directories":{}},"3.0.13":{"name":"uglify-es","description":"JavaScript parser, mangler/compressor and beautifier toolkit","homepage":"https://github.com/mishoo/UglifyJS2/tree/harmony","author":{"name":"Mihai Bazon","email":"mihai.bazon@gmail.com","url":"http://lisperator.net/"},"license":"BSD-2-Clause","version":"3.0.13","engines":{"node":">=0.8.0"},"maintainers":[{"name":"alexlamsl","email":"alexlamsl@gmail.com"}],"repository":{"type":"git","url":"git+https://github.com/mishoo/UglifyJS2.git"},"bugs":{"url":"https://github.com/mishoo/UglifyJS2/issues"},"main":"tools/node.js","bin":{"uglifyjs":"bin/uglifyjs"},"files":["bin","lib","tools","LICENSE"],"dependencies":{"commander":"~2.9.0","source-map":"~0.5.1"},"devDependencies":{"acorn":"~5.0.3","mocha":"~2.3.4","semver":"~5.3.0"},"scripts":{"test":"node test/run-tests.js"},"keywords":["uglify","uglify-js","uglify-es","minify","minifier","es5","es6","es2015"],"gitHead":"c2e471e3ad37a5c02f91179781c85d0e5177dfff","_id":"uglify-es@3.0.13","_shasum":"82d823da4d0139bb1ff3c11e5381934edf52ee64","_from":".","_npmVersion":"4.2.0","_nodeVersion":"7.10.0","_npmUser":{"name":"alexlamsl","email":"alexlamsl@gmail.com"},"dist":{"shasum":"82d823da4d0139bb1ff3c11e5381934edf52ee64","tarball":"https://nexusrepo.pondevelopment.com/repository/npm-all/uglify-es/-/uglify-es-3.0.13.tgz"},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/uglify-es-3.0.13.tgz_1496071365439_0.5936918733641505"},"directories":{}},"3.0.14":{"name":"uglify-es","description":"JavaScript parser, mangler/compressor and beautifier toolkit","homepage":"https://github.com/mishoo/UglifyJS2/tree/harmony","author":{"name":"Mihai Bazon","email":"mihai.bazon@gmail.com","url":"http://lisperator.net/"},"license":"BSD-2-Clause","version":"3.0.14","engines":{"node":">=0.8.0"},"maintainers":[{"name":"alexlamsl","email":"alexlamsl@gmail.com"}],"repository":{"type":"git","url":"git+https://github.com/mishoo/UglifyJS2.git"},"bugs":{"url":"https://github.com/mishoo/UglifyJS2/issues"},"main":"tools/node.js","bin":{"uglifyjs":"bin/uglifyjs"},"files":["bin","lib","tools","LICENSE"],"dependencies":{"commander":"~2.9.0","source-map":"~0.5.1"},"devDependencies":{"acorn":"~5.0.3","mocha":"~2.3.4","semver":"~5.3.0"},"scripts":{"test":"node test/run-tests.js"},"keywords":["uglify","uglify-js","uglify-es","minify","minifier","es5","es6","es2015"],"gitHead":"a1647ee0c5a7fcd4fc440d5a8dc348061dc0b815","_id":"uglify-es@3.0.14","_shasum":"2f4e757b09a9d63df8cb16ea7a7c418f927957b4","_from":".","_npmVersion":"4.2.0","_nodeVersion":"7.10.0","_npmUser":{"name":"alexlamsl","email":"alexlamsl@gmail.com"},"dist":{"shasum":"2f4e757b09a9d63df8cb16ea7a7c418f927957b4","tarball":"https://nexusrepo.pondevelopment.com/repository/npm-all/uglify-es/-/uglify-es-3.0.14.tgz"},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/uglify-es-3.0.14.tgz_1496221037038_0.637936923885718"},"directories":{}},"3.0.15":{"name":"uglify-es","description":"JavaScript parser, mangler/compressor and beautifier toolkit","homepage":"https://github.com/mishoo/UglifyJS2/tree/harmony","author":{"name":"Mihai Bazon","email":"mihai.bazon@gmail.com","url":"http://lisperator.net/"},"license":"BSD-2-Clause","version":"3.0.15","engines":{"node":">=0.8.0"},"maintainers":[{"name":"alexlamsl","email":"alexlamsl@gmail.com"}],"repository":{"type":"git","url":"git+https://github.com/mishoo/UglifyJS2.git"},"bugs":{"url":"https://github.com/mishoo/UglifyJS2/issues"},"main":"tools/node.js","bin":{"uglifyjs":"bin/uglifyjs"},"files":["bin","lib","tools","LICENSE"],"dependencies":{"commander":"~2.9.0","source-map":"~0.5.1"},"devDependencies":{"acorn":"~5.0.3","mocha":"~2.3.4","semver":"~5.3.0"},"scripts":{"test":"node test/run-tests.js"},"keywords":["uglify","uglify-js","uglify-es","minify","minifier","es5","es6","es2015"],"gitHead":"888a321417ec9f98885b2759f0aa95710cfe6f94","_id":"uglify-es@3.0.15","_shasum":"4a23d0e9cb5f25f7bb3f1f0bbe0bb364e600d047","_from":".","_npmVersion":"4.2.0","_nodeVersion":"7.10.0","_npmUser":{"name":"alexlamsl","email":"alexlamsl@gmail.com"},"dist":{"shasum":"4a23d0e9cb5f25f7bb3f1f0bbe0bb364e600d047","tarball":"https://nexusrepo.pondevelopment.com/repository/npm-all/uglify-es/-/uglify-es-3.0.15.tgz"},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/uglify-es-3.0.15.tgz_1496322508038_0.8459521224722266"},"directories":{}},"3.0.17":{"name":"uglify-es","description":"JavaScript parser, mangler/compressor and beautifier toolkit","homepage":"https://github.com/mishoo/UglifyJS2/tree/harmony","author":{"name":"Mihai Bazon","email":"mihai.bazon@gmail.com","url":"http://lisperator.net/"},"license":"BSD-2-Clause","version":"3.0.17","engines":{"node":">=0.8.0"},"maintainers":[{"name":"alexlamsl","email":"alexlamsl@gmail.com"}],"repository":{"type":"git","url":"git+https://github.com/mishoo/UglifyJS2.git"},"bugs":{"url":"https://github.com/mishoo/UglifyJS2/issues"},"main":"tools/node.js","bin":{"uglifyjs":"bin/uglifyjs"},"files":["bin","lib","tools","LICENSE"],"dependencies":{"commander":"~2.9.0","source-map":"~0.5.1"},"devDependencies":{"acorn":"~5.0.3","mocha":"~2.3.4","semver":"~5.3.0"},"scripts":{"test":"node test/run-tests.js"},"keywords":["uglify","uglify-js","uglify-es","minify","minifier","es5","es6","es2015"],"gitHead":"370f2cc90697b118644cad1339a8b6c72927f39c","_id":"uglify-es@3.0.17","_shasum":"fafc1129d64d3900ae255672e64a4cf94d25796c","_from":".","_npmVersion":"3.10.10","_nodeVersion":"6.10.3","_npmUser":{"name":"alexlamsl","email":"alexlamsl@gmail.com"},"dist":{"shasum":"fafc1129d64d3900ae255672e64a4cf94d25796c","tarball":"https://nexusrepo.pondevelopment.com/repository/npm-all/uglify-es/-/uglify-es-3.0.17.tgz"},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/uglify-es-3.0.17.tgz_1497547980637_0.510196547023952"},"directories":{}},"3.0.18":{"name":"uglify-es","description":"JavaScript parser, mangler/compressor and beautifier toolkit","homepage":"https://github.com/mishoo/UglifyJS2/tree/harmony","author":{"name":"Mihai Bazon","email":"mihai.bazon@gmail.com","url":"http://lisperator.net/"},"license":"BSD-2-Clause","version":"3.0.18","engines":{"node":">=0.8.0"},"maintainers":[{"name":"alexlamsl","email":"alexlamsl@gmail.com"}],"repository":{"type":"git","url":"git+https://github.com/mishoo/UglifyJS2.git"},"bugs":{"url":"https://github.com/mishoo/UglifyJS2/issues"},"main":"tools/node.js","bin":{"uglifyjs":"bin/uglifyjs"},"files":["bin","lib","tools","LICENSE"],"dependencies":{"commander":"~2.9.0","source-map":"~0.5.1"},"devDependencies":{"acorn":"~5.0.3","mocha":"~2.3.4","semver":"~5.3.0"},"scripts":{"test":"node test/run-tests.js"},"keywords":["uglify","uglify-js","uglify-es","minify","minifier","es5","es6","es2015"],"gitHead":"a298bcce02423d66d3e463360e09027a13cbee15","_id":"uglify-es@3.0.18","_npmVersion":"5.0.3","_nodeVersion":"8.1.2","_npmUser":{"name":"alexlamsl","email":"alexlamsl@gmail.com"},"dist":{"integrity":"sha512-l0fr+7V/H4VzxBd8r2Xae0OP9cqra7TfMTGyoy7tSB5R82TvayClrHMr6bLwf8rcPjfdVrLNgq5lZTi/ink90Q==","shasum":"ad206e41b5e4b90bfbf5d2a058ef0321b9f118ac","tarball":"https://nexusrepo.pondevelopment.com/repository/npm-all/uglify-es/-/uglify-es-3.0.18.tgz"},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/uglify-es-3.0.18.tgz_1497780289684_0.4215248078107834"},"directories":{}},"3.0.19":{"name":"uglify-es","description":"JavaScript parser, mangler/compressor and beautifier toolkit","homepage":"https://github.com/mishoo/UglifyJS2/tree/harmony","author":{"name":"Mihai Bazon","email":"mihai.bazon@gmail.com","url":"http://lisperator.net/"},"license":"BSD-2-Clause","version":"3.0.19","engines":{"node":">=0.8.0"},"maintainers":[{"name":"alexlamsl","email":"alexlamsl@gmail.com"}],"repository":{"type":"git","url":"git+https://github.com/mishoo/UglifyJS2.git"},"bugs":{"url":"https://github.com/mishoo/UglifyJS2/issues"},"main":"tools/node.js","bin":{"uglifyjs":"bin/uglifyjs"},"files":["bin","lib","tools","LICENSE"],"dependencies":{"commander":"~2.9.0","source-map":"~0.5.1"},"devDependencies":{"acorn":"~5.0.3","mocha":"~2.3.4","semver":"~5.3.0"},"scripts":{"test":"node test/run-tests.js"},"keywords":["uglify","uglify-js","uglify-es","minify","minifier","es5","es6","es2015"],"gitHead":"402954bdf3dcf0e4f989fef4e60958f13b757173","_id":"uglify-es@3.0.19","_npmVersion":"5.0.3","_nodeVersion":"8.1.2","_npmUser":{"name":"alexlamsl","email":"alexlamsl@gmail.com"},"dist":{"integrity":"sha512-d6ed8hkMCAIWdC+Nl3ihQo/eiX8cMNTbUAC2AEF0vlLTHIR3yAY6tdDoRRL4GuZ/jWQ7JVPK+uSp5XWRL3AVcw==","shasum":"53d448ddf59770c1eafbe2e257a27e2f4851d0e5","tarball":"https://nexusrepo.pondevelopment.com/repository/npm-all/uglify-es/-/uglify-es-3.0.19.tgz"},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/uglify-es-3.0.19.tgz_1498083223274_0.23008744744583964"},"directories":{}},"3.0.20":{"name":"uglify-es","description":"JavaScript parser, mangler/compressor and beautifier toolkit","homepage":"https://github.com/mishoo/UglifyJS2/tree/harmony","author":{"name":"Mihai Bazon","email":"mihai.bazon@gmail.com","url":"http://lisperator.net/"},"license":"BSD-2-Clause","version":"3.0.20","engines":{"node":">=0.8.0"},"maintainers":[{"name":"alexlamsl","email":"alexlamsl@gmail.com"}],"repository":{"type":"git","url":"git+https://github.com/mishoo/UglifyJS2.git"},"bugs":{"url":"https://github.com/mishoo/UglifyJS2/issues"},"main":"tools/node.js","bin":{"uglifyjs":"bin/uglifyjs"},"files":["bin","lib","tools","LICENSE"],"dependencies":{"commander":"~2.9.0","source-map":"~0.5.1"},"devDependencies":{"acorn":"~5.0.3","mocha":"~2.3.4","semver":"~5.3.0"},"scripts":{"test":"node test/run-tests.js"},"keywords":["uglify","uglify-js","uglify-es","minify","minifier","es5","es6","es2015"],"gitHead":"96f9b8cba31033d460ad0b1e721b875837e04cbb","_id":"uglify-es@3.0.20","_npmVersion":"5.0.3","_nodeVersion":"8.1.2","_npmUser":{"name":"alexlamsl","email":"alexlamsl@gmail.com"},"dist":{"integrity":"sha512-umLok08LJl/aHzDqJZomUtDPPegw/T7RHkVh+OnZ4fgb5X/LQPqRZcicDJh+s0Tnw8lSB/Lcc1RtZBMVz66eJw==","shasum":"9f58abb5c719b29778507173838de208f132aa99","tarball":"https://nexusrepo.pondevelopment.com/repository/npm-all/uglify-es/-/uglify-es-3.0.20.tgz"},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/uglify-es-3.0.20.tgz_1498385006398_0.1481073081959039"},"directories":{}},"3.0.21":{"name":"uglify-es","description":"JavaScript parser, mangler/compressor and beautifier toolkit","homepage":"https://github.com/mishoo/UglifyJS2/tree/harmony","author":{"name":"Mihai Bazon","email":"mihai.bazon@gmail.com","url":"http://lisperator.net/"},"license":"BSD-2-Clause","version":"3.0.21","engines":{"node":">=0.8.0"},"maintainers":[{"name":"alexlamsl","email":"alexlamsl@gmail.com"}],"repository":{"type":"git","url":"git+https://github.com/mishoo/UglifyJS2.git"},"bugs":{"url":"https://github.com/mishoo/UglifyJS2/issues"},"main":"tools/node.js","bin":{"uglifyjs":"bin/uglifyjs"},"files":["bin","lib","tools","LICENSE"],"dependencies":{"commander":"~2.9.0","source-map":"~0.5.1"},"devDependencies":{"acorn":"~5.0.3","mocha":"~2.3.4","semver":"~5.3.0"},"scripts":{"test":"node test/run-tests.js"},"keywords":["uglify","uglify-js","uglify-es","minify","minifier","es5","es6","es2015","es2016","es2017","async","await"],"gitHead":"945db924fc81479e54c5513459a057f19165402e","_id":"uglify-es@3.0.21","_npmVersion":"5.0.3","_nodeVersion":"8.1.2","_npmUser":{"name":"alexlamsl","email":"alexlamsl@gmail.com"},"dist":{"integrity":"sha512-hJ0lb3CoazL8TANWJCb6TusMOvcBSZp5vRiA3PST+LzwedUOguvf4xcpPwQGRS5GnaLYll9DQEL/jr8HPAioMg==","shasum":"d32c3386255a25a5b6d83f386c1ba80e36679b64","tarball":"https://nexusrepo.pondevelopment.com/repository/npm-all/uglify-es/-/uglify-es-3.0.21.tgz"},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/uglify-es-3.0.21.tgz_1498679447130_0.6430004565045238"},"directories":{}},"3.0.22":{"name":"uglify-es","description":"JavaScript parser, mangler/compressor and beautifier toolkit","homepage":"https://github.com/mishoo/UglifyJS2/tree/harmony","author":{"name":"Mihai Bazon","email":"mihai.bazon@gmail.com","url":"http://lisperator.net/"},"license":"BSD-2-Clause","version":"3.0.22","engines":{"node":">=0.8.0"},"maintainers":[{"name":"alexlamsl","email":"alexlamsl@gmail.com"}],"repository":{"type":"git","url":"git+https://github.com/mishoo/UglifyJS2.git"},"bugs":{"url":"https://github.com/mishoo/UglifyJS2/issues"},"main":"tools/node.js","bin":{"uglifyjs":"bin/uglifyjs"},"files":["bin","lib","tools","LICENSE"],"dependencies":{"commander":"~2.9.0","source-map":"~0.5.1"},"devDependencies":{"acorn":"~5.0.3","mocha":"~2.3.4","semver":"~5.3.0"},"scripts":{"test":"node test/run-tests.js"},"keywords":["uglify","uglify-js","uglify-es","minify","minifier","es5","es6","es2015","es2016","es2017","async","await"],"gitHead":"a9eecd844fef8bdac06307aa14e6d1cc64a663f0","_id":"uglify-es@3.0.22","_npmVersion":"5.0.3","_nodeVersion":"8.1.2-nightly201706274be96a0e53","_npmUser":{"name":"alexlamsl","email":"alexlamsl@gmail.com"},"dist":{"integrity":"sha512-4bvwQuswYIpkeZRJ7v9ZVwsOXKeWnop9EUL5FmGy+KVQHtYBf0GzIKryzvY7j6eBTAw9otf4b9VsrufW9CcDHA==","shasum":"62a2765e7737e97073f8ae73c7062131652425d8","tarball":"https://nexusrepo.pondevelopment.com/repository/npm-all/uglify-es/-/uglify-es-3.0.22.tgz"},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/uglify-es-3.0.22.tgz_1498805003902_0.18852434447035193"},"directories":{}},"3.0.23":{"name":"uglify-es","description":"JavaScript parser, mangler/compressor and beautifier toolkit","homepage":"https://github.com/mishoo/UglifyJS2/tree/harmony","author":{"name":"Mihai Bazon","email":"mihai.bazon@gmail.com","url":"http://lisperator.net/"},"license":"BSD-2-Clause","version":"3.0.23","engines":{"node":">=0.8.0"},"maintainers":[{"name":"alexlamsl","email":"alexlamsl@gmail.com"}],"repository":{"type":"git","url":"git+https://github.com/mishoo/UglifyJS2.git"},"bugs":{"url":"https://github.com/mishoo/UglifyJS2/issues"},"main":"tools/node.js","bin":{"uglifyjs":"bin/uglifyjs"},"files":["bin","lib","tools","LICENSE"],"dependencies":{"commander":"~2.9.0","source-map":"~0.5.1"},"devDependencies":{"acorn":"~5.0.3","mocha":"~2.3.4","semver":"~5.3.0"},"scripts":{"test":"node test/run-tests.js"},"keywords":["uglify","uglify-js","uglify-es","minify","minifier","es5","es6","es2015","es2016","es2017","async","await"],"gitHead":"33ad0d258c8a78c477f0ec995a10b51a2a1ee95a","_id":"uglify-es@3.0.23","_npmVersion":"5.0.3","_nodeVersion":"8.1.3","_npmUser":{"name":"alexlamsl","email":"alexlamsl@gmail.com"},"dist":{"integrity":"sha512-/2wRtzmFqHNPK+GyO2JD828sUdX1zgwHflhmYxuLpjXMysdupAPB0vbmb59NT22uq5+Qm1tizZ1MWqH3mbEpfA==","shasum":"9682c6ae347269ad6b0628bd8b3d6a3b391707c0","tarball":"https://nexusrepo.pondevelopment.com/repository/npm-all/uglify-es/-/uglify-es-3.0.23.tgz"},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/uglify-es-3.0.23.tgz_1499002155327_0.12816859199665487"},"directories":{}},"3.0.24":{"name":"uglify-es","description":"JavaScript parser, mangler/compressor and beautifier toolkit","homepage":"https://github.com/mishoo/UglifyJS2/tree/harmony","author":{"name":"Mihai Bazon","email":"mihai.bazon@gmail.com","url":"http://lisperator.net/"},"license":"BSD-2-Clause","version":"3.0.24","engines":{"node":">=0.8.0"},"maintainers":[{"name":"alexlamsl","email":"alexlamsl@gmail.com"}],"repository":{"type":"git","url":"https://github.com/mishoo/UglifyJS2/tree/harmony"},"bugs":{"url":"https://github.com/mishoo/UglifyJS2/issues"},"main":"tools/node.js","bin":{"uglifyjs":"bin/uglifyjs"},"files":["bin","lib","tools","LICENSE"],"dependencies":{"commander":"~2.9.0","source-map":"~0.5.1"},"devDependencies":{"acorn":"~5.0.3","mocha":"~2.3.4","semver":"~5.3.0"},"scripts":{"test":"node test/run-tests.js"},"keywords":["uglify","uglify-js","uglify-es","minify","minifier","es5","es6","es2015","es2016","es2017","async","await"],"gitHead":"3e1a8598bf924c6a313c921d973a03896a698658","_id":"uglify-es@3.0.24","_npmVersion":"5.0.3","_nodeVersion":"8.1.3","_npmUser":{"name":"alexlamsl","email":"alexlamsl@gmail.com"},"dist":{"integrity":"sha512-5BfuaLWF0idSXopD0iAK6osMvyo1jEyuQ8MtSpOdLvqUDjlfDDf18qEyz3M7athqorybUuAoKpKW1DhFIhxP2w==","shasum":"fab5dccff6108df71d9573012ef65c740cb97cdc","tarball":"https://nexusrepo.pondevelopment.com/repository/npm-all/uglify-es/-/uglify-es-3.0.24.tgz"},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/uglify-es-3.0.24.tgz_1499499571311_0.16796716139651835"},"directories":{}},"3.0.25":{"name":"uglify-es","description":"JavaScript parser, mangler/compressor and beautifier toolkit for ES6+","homepage":"https://github.com/mishoo/UglifyJS2/tree/harmony","author":{"name":"Mihai Bazon","email":"mihai.bazon@gmail.com","url":"http://lisperator.net/"},"license":"BSD-2-Clause","version":"3.0.25","engines":{"node":">=0.8.0"},"maintainers":[{"name":"alexlamsl","email":"alexlamsl@gmail.com"}],"repository":{"type":"git","url":"git+https://github.com/mishoo/UglifyJS2.git#harmony"},"bugs":{"url":"https://github.com/mishoo/UglifyJS2/issues"},"main":"tools/node.js","bin":{"uglifyjs":"bin/uglifyjs"},"files":["bin","lib","tools","LICENSE"],"dependencies":{"commander":"~2.9.0","source-map":"~0.5.1"},"devDependencies":{"acorn":"~5.0.3","mocha":"~2.3.4","semver":"~5.3.0"},"scripts":{"test":"node test/run-tests.js"},"keywords":["uglify","uglify-es","uglify-js","minify","minifier","javascript","ecmascript","es5","es6","es7","es8","es2015","es2016","es2017","async","await"],"gitHead":"91f8b57b3ef22f91b755a0e5f95f5b5aa24ed74c","_id":"uglify-es@3.0.25","_npmVersion":"5.0.3","_nodeVersion":"8.1.4","_npmUser":{"name":"alexlamsl","email":"alexlamsl@gmail.com"},"dist":{"integrity":"sha512-UcW+mvxBCW0/3YxJRFl5w7Fsoz/GMx63aujVcLbeyfpLh8RcaEv/KjVUpl4/2YM7Zhscr5B68UCbOB67umG/EQ==","shasum":"b5a1de9cd7b279f4487dbb136eb7097d3432af77","tarball":"https://nexusrepo.pondevelopment.com/repository/npm-all/uglify-es/-/uglify-es-3.0.25.tgz"},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/uglify-es-3.0.25.tgz_1500182690747_0.14921661233529449"},"directories":{}},"3.0.26":{"name":"uglify-es","description":"JavaScript parser, mangler/compressor and beautifier toolkit for ES6+","homepage":"https://github.com/mishoo/UglifyJS2/tree/harmony","author":{"name":"Mihai Bazon","email":"mihai.bazon@gmail.com","url":"http://lisperator.net/"},"license":"BSD-2-Clause","version":"3.0.26","engines":{"node":">=0.8.0"},"maintainers":[{"name":"alexlamsl","email":"alexlamsl@gmail.com"}],"repository":{"type":"git","url":"git+https://github.com/mishoo/UglifyJS2.git#harmony"},"bugs":{"url":"https://github.com/mishoo/UglifyJS2/issues"},"main":"tools/node.js","bin":{"uglifyjs":"bin/uglifyjs"},"files":["bin","lib","tools","LICENSE"],"dependencies":{"commander":"~2.11.0","source-map":"~0.5.1"},"devDependencies":{"acorn":"~5.1.1","mocha":"~3.4.2","semver":"~5.3.0"},"scripts":{"test":"node test/run-tests.js"},"keywords":["uglify","uglify-es","uglify-js","minify","minifier","javascript","ecmascript","es5","es6","es7","es8","es2015","es2016","es2017","async","await"],"gitHead":"1e0c7d2bc5c0664871263e68bd1fcc23725d7384","_id":"uglify-es@3.0.26","_npmVersion":"5.3.0","_nodeVersion":"8.2.1","_npmUser":{"name":"alexlamsl","email":"alexlamsl@gmail.com"},"dist":{"integrity":"sha512-WW6GAQCeb2YwGsayWTvf5pVxzVrSfDa5B3pJfKp/sCy3TgBQZ+1A5MZpyxRoZRzGTmPbbIAXo/GlBxHTPShVrA==","shasum":"0af5674aeb3325ce0cb1dd8746afd6b953f20798","tarball":"https://nexusrepo.pondevelopment.com/repository/npm-all/uglify-es/-/uglify-es-3.0.26.tgz"},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/uglify-es-3.0.26.tgz_1500802759192_0.9753522935789078"},"directories":{}},"3.0.27":{"name":"uglify-es","description":"JavaScript parser, mangler/compressor and beautifier toolkit for ES6+","homepage":"https://github.com/mishoo/UglifyJS2/tree/harmony","author":{"name":"Mihai Bazon","email":"mihai.bazon@gmail.com","url":"http://lisperator.net/"},"license":"BSD-2-Clause","version":"3.0.27","engines":{"node":">=0.8.0"},"maintainers":[{"name":"alexlamsl","email":"alexlamsl@gmail.com"}],"repository":{"type":"git","url":"git+https://github.com/mishoo/UglifyJS2.git#harmony"},"bugs":{"url":"https://github.com/mishoo/UglifyJS2/issues"},"main":"tools/node.js","bin":{"uglifyjs":"bin/uglifyjs"},"files":["bin","lib","tools","LICENSE"],"dependencies":{"commander":"~2.11.0","source-map":"~0.5.1"},"devDependencies":{"acorn":"~5.1.1","mocha":"~3.4.2","semver":"~5.3.0"},"scripts":{"test":"node test/run-tests.js"},"keywords":["uglify","uglify-es","uglify-js","minify","minifier","javascript","ecmascript","es5","es6","es7","es8","es2015","es2016","es2017","async","await"],"gitHead":"f54ab1684397fe6d6279821d4d7126bfccf20aef","_id":"uglify-es@3.0.27","_npmVersion":"5.3.0","_nodeVersion":"8.2.1","_npmUser":{"name":"alexlamsl","email":"alexlamsl@gmail.com"},"dist":{"integrity":"sha512-pilJpTnbfm9OhYKJJn7rwv3rtdMerqv+HLLS+Vz/3q3uYA5mE+aQYslfqyj3+fiNwoC+PQRCLyvxkkANa5zYHw==","shasum":"391790388f369196be23a49caeb0d5c424fa774e","tarball":"https://nexusrepo.pondevelopment.com/repository/npm-all/uglify-es/-/uglify-es-3.0.27.tgz"},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/uglify-es-3.0.27.tgz_1501403683252_0.4313966170884669"},"directories":{}},"3.0.28":{"name":"uglify-es","description":"JavaScript parser, mangler/compressor and beautifier toolkit for ES6+","homepage":"https://github.com/mishoo/UglifyJS2/tree/harmony","author":{"name":"Mihai Bazon","email":"mihai.bazon@gmail.com","url":"http://lisperator.net/"},"license":"BSD-2-Clause","version":"3.0.28","engines":{"node":">=0.8.0"},"maintainers":[{"name":"alexlamsl","email":"alexlamsl@gmail.com"}],"repository":{"type":"git","url":"git+https://github.com/mishoo/UglifyJS2.git#harmony"},"bugs":{"url":"https://github.com/mishoo/UglifyJS2/issues"},"main":"tools/node.js","bin":{"uglifyjs":"bin/uglifyjs"},"files":["bin","lib","tools","LICENSE"],"dependencies":{"commander":"~2.11.0","source-map":"~0.5.1"},"devDependencies":{"acorn":"~5.1.1","mocha":"~3.4.2","semver":"~5.3.0"},"scripts":{"test":"node test/run-tests.js"},"keywords":["uglify","uglify-es","uglify-js","minify","minifier","javascript","ecmascript","es5","es6","es7","es8","es2015","es2016","es2017","async","await"],"gitHead":"067d52b6bac67378cccbc8fdea2320676aafc47e","_id":"uglify-es@3.0.28","_npmVersion":"5.3.0","_nodeVersion":"8.4.0","_npmUser":{"name":"alexlamsl","email":"alexlamsl@gmail.com"},"dist":{"integrity":"sha512-xw1hJsSp361OO0Sq0XvNyTI2wfQ4eKNljfSYyeYX/dz9lKEDj+DK+A8CzB0NmoCwWX1MnEx9f16HlkKXyG65CQ==","shasum":"1cdedbbcdb7865223065281ad7b2347629851d4b","tarball":"https://nexusrepo.pondevelopment.com/repository/npm-all/uglify-es/-/uglify-es-3.0.28.tgz"},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/uglify-es-3.0.28.tgz_1503166558620_0.7198508097790182"},"directories":{}},"3.1.0":{"name":"uglify-es","description":"JavaScript parser, mangler/compressor and beautifier toolkit for ES6+","homepage":"https://github.com/mishoo/UglifyJS2/tree/harmony","author":{"name":"Mihai Bazon","email":"mihai.bazon@gmail.com","url":"http://lisperator.net/"},"license":"BSD-2-Clause","version":"3.1.0","engines":{"node":">=0.8.0"},"maintainers":[{"name":"alexlamsl","email":"alexlamsl@gmail.com"}],"repository":{"type":"git","url":"git+https://github.com/mishoo/UglifyJS2.git#harmony"},"bugs":{"url":"https://github.com/mishoo/UglifyJS2/issues"},"main":"tools/node.js","bin":{"uglifyjs":"bin/uglifyjs"},"files":["bin","lib","tools","LICENSE"],"dependencies":{"commander":"~2.11.0","source-map":"~0.5.1"},"devDependencies":{"acorn":"~5.1.1","mocha":"~3.5.1","semver":"~5.4.1"},"scripts":{"test":"node test/run-tests.js"},"keywords":["uglify","uglify-es","uglify-js","minify","minifier","javascript","ecmascript","es5","es6","es7","es8","es2015","es2016","es2017","async","await"],"gitHead":"d8685f528d4bffe037427a1beb134e2bb3bd9493","_id":"uglify-es@3.1.0","_npmVersion":"5.3.0","_nodeVersion":"8.4.0","_npmUser":{"name":"alexlamsl","email":"alexlamsl@gmail.com"},"dist":{"integrity":"sha512-368gRJ/ww3e9c8eJLAFM6sco4ndsg7d2MskNusejep0kvd7VCqNj/q/zrDG/1KwS+EWfTxJKTj7UyLN+zz+gyg==","shasum":"b4ca636bde6467e82a061ea7f2c124899d82bd2c","tarball":"https://nexusrepo.pondevelopment.com/repository/npm-all/uglify-es/-/uglify-es-3.1.0.tgz"},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/uglify-es-3.1.0.tgz_1505051077088_0.4031754578463733"},"directories":{}},"3.1.1":{"name":"uglify-es","description":"JavaScript parser, mangler/compressor and beautifier toolkit for ES6+","homepage":"https://github.com/mishoo/UglifyJS2/tree/harmony","author":{"name":"Mihai Bazon","email":"mihai.bazon@gmail.com","url":"http://lisperator.net/"},"license":"BSD-2-Clause","version":"3.1.1","engines":{"node":">=0.8.0"},"maintainers":[{"name":"alexlamsl","email":"alexlamsl@gmail.com"}],"repository":{"type":"git","url":"git+https://github.com/mishoo/UglifyJS2.git#harmony"},"bugs":{"url":"https://github.com/mishoo/UglifyJS2/issues"},"main":"tools/node.js","bin":{"uglifyjs":"bin/uglifyjs"},"files":["bin","lib","tools","LICENSE"],"dependencies":{"commander":"~2.11.0","source-map":"~0.5.1"},"devDependencies":{"acorn":"~5.1.1","mocha":"~3.5.1","semver":"~5.4.1"},"scripts":{"test":"node test/run-tests.js"},"keywords":["uglify","uglify-es","uglify-js","minify","minifier","javascript","ecmascript","es5","es6","es7","es8","es2015","es2016","es2017","async","await"],"gitHead":"c46b9f361afbe3537ca13dfcc4debdfc837aef60","_id":"uglify-es@3.1.1","_npmVersion":"5.3.0","_nodeVersion":"8.4.0","_npmUser":{"name":"alexlamsl","email":"alexlamsl@gmail.com"},"dist":{"integrity":"sha512-oESWzXRJ5cHfxZnj1wS4WAy1Tcn4RbMhSX6lhMpzkHN+6SrO6Wmlg9dK4M+K/MXHIwndOD7wme7fEGuFcEf4BQ==","shasum":"27615a1203cd0b351d8b5bda743ac92ed482b826","tarball":"https://nexusrepo.pondevelopment.com/repository/npm-all/uglify-es/-/uglify-es-3.1.1.tgz"},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/uglify-es-3.1.1.tgz_1505633850717_0.2511687409132719"},"directories":{}},"3.1.2":{"name":"uglify-es","description":"JavaScript parser, mangler/compressor and beautifier toolkit for ES6+","homepage":"https://github.com/mishoo/UglifyJS2/tree/harmony","author":{"name":"Mihai Bazon","email":"mihai.bazon@gmail.com","url":"http://lisperator.net/"},"license":"BSD-2-Clause","version":"3.1.2","engines":{"node":">=0.8.0"},"maintainers":[{"name":"alexlamsl","email":"alexlamsl@gmail.com"}],"repository":{"type":"git","url":"git+https://github.com/mishoo/UglifyJS2.git#harmony"},"bugs":{"url":"https://github.com/mishoo/UglifyJS2/issues"},"main":"tools/node.js","bin":{"uglifyjs":"bin/uglifyjs"},"files":["bin","lib","tools","LICENSE"],"dependencies":{"commander":"~2.11.0","source-map":"~0.5.1"},"devDependencies":{"acorn":"~5.1.1","mocha":"~3.5.1","semver":"~5.4.1"},"scripts":{"test":"node test/run-tests.js"},"keywords":["uglify","uglify-es","uglify-js","minify","minifier","javascript","ecmascript","es5","es6","es7","es8","es2015","es2016","es2017","async","await"],"gitHead":"68645b28d32b426564929fb8f3903e91d31a8bc6","_id":"uglify-es@3.1.2","_npmVersion":"5.3.0","_nodeVersion":"8.4.0","_npmUser":{"name":"alexlamsl","email":"alexlamsl@gmail.com"},"dist":{"integrity":"sha512-ULYW1xj/yW0IAkLW1XzIXB3O888275E2/r4tFy83D9wPRKGlUjKWeQAZoyHXujr/fsHeh6QMlc1ayCE8kqnoaw==","shasum":"b22cfca950f0632092aff42bb46979d83b5ec6f5","tarball":"https://nexusrepo.pondevelopment.com/repository/npm-all/uglify-es/-/uglify-es-3.1.2.tgz"},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/uglify-es-3.1.2.tgz_1506223353326_0.9411702209617943"},"directories":{}},"3.1.3":{"name":"uglify-es","description":"JavaScript parser, mangler/compressor and beautifier toolkit for ES6+","homepage":"https://github.com/mishoo/UglifyJS2/tree/harmony","author":{"name":"Mihai Bazon","email":"mihai.bazon@gmail.com","url":"http://lisperator.net/"},"license":"BSD-2-Clause","version":"3.1.3","engines":{"node":">=0.8.0"},"maintainers":[{"name":"alexlamsl","email":"alexlamsl@gmail.com"}],"repository":{"type":"git","url":"git+https://github.com/mishoo/UglifyJS2.git#harmony"},"bugs":{"url":"https://github.com/mishoo/UglifyJS2/issues"},"main":"tools/node.js","bin":{"uglifyjs":"bin/uglifyjs"},"files":["bin","lib","tools","LICENSE"],"dependencies":{"commander":"~2.11.0","source-map":"~0.5.1"},"devDependencies":{"acorn":"~5.1.1","mocha":"~3.5.1","semver":"~5.4.1"},"scripts":{"test":"node test/run-tests.js"},"keywords":["uglify","uglify-es","uglify-js","minify","minifier","javascript","ecmascript","es5","es6","es7","es8","es2015","es2016","es2017","async","await"],"gitHead":"873755b35cbac8f9a943fd3cd6179bfb8eab5df1","_id":"uglify-es@3.1.3","_npmVersion":"5.3.0","_nodeVersion":"8.5.0","_npmUser":{"name":"alexlamsl","email":"alexlamsl@gmail.com"},"dist":{"integrity":"sha512-Nuo5gkv/Q6PmLa+Ui2LvK+87YdMAcuXfRIWF0uVfkHVSfpT3Ue0euCSu4t0b8xv4Bt05lmXUT8bLI9OmnyPj8A==","shasum":"a21eeb149cb120a1f8302563689e19496550780b","tarball":"https://nexusrepo.pondevelopment.com/repository/npm-all/uglify-es/-/uglify-es-3.1.3.tgz"},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/uglify-es-3.1.3.tgz_1506847521534_0.9017722813878208"},"directories":{}},"3.1.4":{"name":"uglify-es","description":"JavaScript parser, mangler/compressor and beautifier toolkit for ES6+","homepage":"https://github.com/mishoo/UglifyJS2/tree/harmony","author":{"name":"Mihai Bazon","email":"mihai.bazon@gmail.com","url":"http://lisperator.net/"},"license":"BSD-2-Clause","version":"3.1.4","engines":{"node":">=0.8.0"},"maintainers":[{"name":"alexlamsl","email":"alexlamsl@gmail.com"}],"repository":{"type":"git","url":"git+https://github.com/mishoo/UglifyJS2.git#harmony"},"bugs":{"url":"https://github.com/mishoo/UglifyJS2/issues"},"main":"tools/node.js","bin":{"uglifyjs":"bin/uglifyjs"},"files":["bin","lib","tools","LICENSE"],"dependencies":{"commander":"~2.11.0","source-map":"~0.6.1"},"devDependencies":{"acorn":"~5.1.1","mocha":"~3.5.1","semver":"~5.4.1"},"scripts":{"test":"node test/run-tests.js"},"keywords":["uglify","uglify-es","uglify-js","minify","minifier","javascript","ecmascript","es5","es6","es7","es8","es2015","es2016","es2017","async","await"],"gitHead":"a89f126db6ff3dc0b62d3d13d34513b1f528a7e5","_id":"uglify-es@3.1.4","_npmVersion":"5.4.2","_nodeVersion":"8.7.0","_npmUser":{"name":"alexlamsl","email":"alexlamsl@gmail.com"},"dist":{"integrity":"sha512-inlaJvRPL37E6gg7xjtAnXBaGPzMSXHQsGz9Kms0roYCpcJxBT8tJGmkG9hKS7qmhkjuauiHs5tomBKgAaXZHw==","shasum":"a6235dd053c8f9d7e1e66c40ac618a049a626c79","tarball":"https://nexusrepo.pondevelopment.com/repository/npm-all/uglify-es/-/uglify-es-3.1.4.tgz"},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/uglify-es-3.1.4.tgz_1508608451666_0.39933588402345777"},"directories":{}},"3.1.5":{"name":"uglify-es","description":"JavaScript parser, mangler/compressor and beautifier toolkit for ES6+","homepage":"https://github.com/mishoo/UglifyJS2/tree/harmony","author":{"name":"Mihai Bazon","email":"mihai.bazon@gmail.com","url":"http://lisperator.net/"},"license":"BSD-2-Clause","version":"3.1.5","engines":{"node":">=0.8.0"},"maintainers":[{"name":"alexlamsl","email":"alexlamsl@gmail.com"}],"repository":{"type":"git","url":"git+https://github.com/mishoo/UglifyJS2.git#harmony"},"bugs":{"url":"https://github.com/mishoo/UglifyJS2/issues"},"main":"tools/node.js","bin":{"uglifyjs":"bin/uglifyjs"},"files":["bin","lib","tools","LICENSE"],"dependencies":{"commander":"~2.11.0","source-map":"~0.6.1"},"devDependencies":{"acorn":"~5.1.1","mocha":"~3.5.1","semver":"~5.4.1"},"scripts":{"test":"node test/run-tests.js"},"keywords":["uglify","uglify-es","uglify-js","minify","minifier","javascript","ecmascript","es5","es6","es7","es8","es2015","es2016","es2017","async","await"],"gitHead":"44352eb26abf17419fc41c66fe70186f69a95c2c","_id":"uglify-es@3.1.5","_npmVersion":"5.4.2","_nodeVersion":"8.7.0","_npmUser":{"name":"alexlamsl","email":"alexlamsl@gmail.com"},"dist":{"integrity":"sha512-l2PqhvUNmD5pOKiHMuE8TmlvvsghxvLcg+ffcg/obRn/qm0fXf+1Mi8N7tZZIi6zxQS+PbIvq39VCYxmK0QMYA==","shasum":"63bae0fd4f9feeda417fee7c0ff685a673819683","tarball":"https://nexusrepo.pondevelopment.com/repository/npm-all/uglify-es/-/uglify-es-3.1.5.tgz"},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/uglify-es-3.1.5.tgz_1508608476590_0.7779368832707405"},"directories":{}},"3.1.6":{"name":"uglify-es","description":"JavaScript parser, mangler/compressor and beautifier toolkit for ES6+","homepage":"https://github.com/mishoo/UglifyJS2/tree/harmony","author":{"name":"Mihai Bazon","email":"mihai.bazon@gmail.com","url":"http://lisperator.net/"},"license":"BSD-2-Clause","version":"3.1.6","engines":{"node":">=0.8.0"},"maintainers":[{"name":"alexlamsl","email":"alexlamsl@gmail.com"}],"repository":{"type":"git","url":"git+https://github.com/mishoo/UglifyJS2.git#harmony"},"bugs":{"url":"https://github.com/mishoo/UglifyJS2/issues"},"main":"tools/node.js","bin":{"uglifyjs":"bin/uglifyjs"},"files":["bin","lib","tools","LICENSE"],"dependencies":{"commander":"~2.11.0","source-map":"~0.6.1"},"devDependencies":{"acorn":"~5.1.1","mocha":"~3.5.1","semver":"~5.4.1"},"scripts":{"test":"node test/run-tests.js"},"keywords":["uglify","uglify-es","uglify-js","minify","minifier","javascript","ecmascript","es5","es6","es7","es8","es2015","es2016","es2017","async","await"],"gitHead":"d535daa2c711a6a02f838e1ac390e8e73020abb2","_id":"uglify-es@3.1.6","_npmVersion":"5.4.2","_nodeVersion":"8.8.1","_npmUser":{"name":"alexlamsl","email":"alexlamsl@gmail.com"},"dist":{"integrity":"sha512-7zyH8T4rT3/iLVzNI7Oa8hVQSlv280S8y2/a2EmvEObft3067rdUJJKjBspc70d0HUk1Og1V5Ny4UgZOlZ0hSg==","shasum":"b0f818c055a7e9538abc2286e70c743f2938311f","tarball":"https://nexusrepo.pondevelopment.com/repository/npm-all/uglify-es/-/uglify-es-3.1.6.tgz"},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/uglify-es-3.1.6.tgz_1509281118900_0.5868928616400808"},"directories":{}},"3.1.7":{"name":"uglify-es","description":"JavaScript parser, mangler/compressor and beautifier toolkit for ES6+","homepage":"https://github.com/mishoo/UglifyJS2/tree/harmony","author":{"name":"Mihai Bazon","email":"mihai.bazon@gmail.com","url":"http://lisperator.net/"},"license":"BSD-2-Clause","version":"3.1.7","engines":{"node":">=0.8.0"},"maintainers":[{"name":"alexlamsl","email":"alexlamsl@gmail.com"}],"repository":{"type":"git","url":"git+https://github.com/mishoo/UglifyJS2.git#harmony"},"bugs":{"url":"https://github.com/mishoo/UglifyJS2/issues"},"main":"tools/node.js","bin":{"uglifyjs":"bin/uglifyjs"},"files":["bin","lib","tools","LICENSE"],"dependencies":{"commander":"~2.11.0","source-map":"~0.6.1"},"devDependencies":{"acorn":"~5.1.1","mocha":"~3.5.1","semver":"~5.4.1"},"scripts":{"test":"node test/run-tests.js"},"keywords":["uglify","uglify-es","uglify-js","minify","minifier","javascript","ecmascript","es5","es6","es7","es8","es2015","es2016","es2017","async","await"],"gitHead":"0c435190979576ac3ffcb885da3fbc416538800d","_id":"uglify-es@3.1.7","_npmVersion":"5.4.2","_nodeVersion":"8.8.1","_npmUser":{"name":"alexlamsl","email":"alexlamsl@gmail.com"},"dist":{"integrity":"sha512-gOFSRbF5iNmVmIa+VOcs89r5gVU1fLEXHtK6eDKh+oTlukwQc+Wg9iGzgnuAt+XXfVOhPrW05HVXZO2gPJneyA==","shasum":"4994b6d7dee6ae0b05bd4fb5d18c9ae2023b6d58","tarball":"https://nexusrepo.pondevelopment.com/repository/npm-all/uglify-es/-/uglify-es-3.1.7.tgz"},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/uglify-es-3.1.7.tgz_1509874556926_0.6706235716119409"},"deprecated":"major issues discovered","directories":{}},"3.1.8":{"name":"uglify-es","description":"JavaScript parser, mangler/compressor and beautifier toolkit for ES6+","homepage":"https://github.com/mishoo/UglifyJS2/tree/harmony","author":{"name":"Mihai Bazon","email":"mihai.bazon@gmail.com","url":"http://lisperator.net/"},"license":"BSD-2-Clause","version":"3.1.8","engines":{"node":">=0.8.0"},"maintainers":[{"name":"alexlamsl","email":"alexlamsl@gmail.com"}],"repository":{"type":"git","url":"git+https://github.com/mishoo/UglifyJS2.git#harmony"},"bugs":{"url":"https://github.com/mishoo/UglifyJS2/issues"},"main":"tools/node.js","bin":{"uglifyjs":"bin/uglifyjs"},"files":["bin","lib","tools","LICENSE"],"dependencies":{"commander":"~2.11.0","source-map":"~0.6.1"},"devDependencies":{"acorn":"~5.1.1","mocha":"~3.5.1","semver":"~5.4.1"},"scripts":{"test":"node test/run-tests.js"},"keywords":["uglify","uglify-es","uglify-js","minify","minifier","javascript","ecmascript","es5","es6","es7","es8","es2015","es2016","es2017","async","await"],"gitHead":"94b19a9c46917ba1ebe202d79ab8ced622fd2b45","_id":"uglify-es@3.1.8","_npmVersion":"5.4.2","_nodeVersion":"8.8.1","_npmUser":{"name":"alexlamsl","email":"alexlamsl@gmail.com"},"dist":{"integrity":"sha512-z+rniTaxBFZngGxc93XAFwExhkWBtT2JlBVQDJ25D8pQD2Dlqf5sJg8ZhXMzK5xyu+hbUhuw52nUZD3+qqRmkQ==","shasum":"2f21a56871d6354dcc21469cc034c3967f14c5b1","tarball":"https://nexusrepo.pondevelopment.com/repository/npm-all/uglify-es/-/uglify-es-3.1.8.tgz"},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/uglify-es-3.1.8.tgz_1510008002749_0.09811073006130755"},"directories":{}},"3.1.9":{"name":"uglify-es","description":"JavaScript parser, mangler/compressor and beautifier toolkit for ES6+","homepage":"https://github.com/mishoo/UglifyJS2/tree/harmony","author":{"name":"Mihai Bazon","email":"mihai.bazon@gmail.com","url":"http://lisperator.net/"},"license":"BSD-2-Clause","version":"3.1.9","engines":{"node":">=0.8.0"},"maintainers":[{"name":"alexlamsl","email":"alexlamsl@gmail.com"}],"repository":{"type":"git","url":"git+https://github.com/mishoo/UglifyJS2.git#harmony"},"bugs":{"url":"https://github.com/mishoo/UglifyJS2/issues"},"main":"tools/node.js","bin":{"uglifyjs":"bin/uglifyjs"},"files":["bin","lib","tools","LICENSE"],"dependencies":{"commander":"~2.11.0","source-map":"~0.6.1"},"devDependencies":{"acorn":"~5.1.1","mocha":"~3.5.1","semver":"~5.4.1"},"scripts":{"test":"node test/run-tests.js"},"keywords":["uglify","uglify-es","uglify-js","minify","minifier","javascript","ecmascript","es5","es6","es7","es8","es2015","es2016","es2017","async","await"],"gitHead":"9632f79e4692b3055ea3bb2580bca6f6a0412f7b","_id":"uglify-es@3.1.9","_npmVersion":"5.5.1","_nodeVersion":"9.1.0","_npmUser":{"name":"alexlamsl","email":"alexlamsl@gmail.com"},"dist":{"integrity":"sha512-wVSiJKHDgDDFmxTVVvnbAH6IpamAFHYDI+5JvwPdaqIMnk8kRTX2JKwq1Fx7gb2+Jj5Dus8kzvIpKkWOMNU51w==","shasum":"6c82df628ac9eb7af9c61fd70c744a084abe6161","tarball":"https://nexusrepo.pondevelopment.com/repository/npm-all/uglify-es/-/uglify-es-3.1.9.tgz"},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/uglify-es-3.1.9.tgz_1510402713335_0.6976590962149203"},"directories":{}},"3.1.10":{"name":"uglify-es","description":"JavaScript parser, mangler/compressor and beautifier toolkit for ES6+","homepage":"https://github.com/mishoo/UglifyJS2/tree/harmony","author":{"name":"Mihai Bazon","email":"mihai.bazon@gmail.com","url":"http://lisperator.net/"},"license":"BSD-2-Clause","version":"3.1.10","engines":{"node":">=0.8.0"},"maintainers":[{"name":"alexlamsl","email":"alexlamsl@gmail.com"}],"repository":{"type":"git","url":"git+https://github.com/mishoo/UglifyJS2.git#harmony"},"bugs":{"url":"https://github.com/mishoo/UglifyJS2/issues"},"main":"tools/node.js","bin":{"uglifyjs":"bin/uglifyjs"},"files":["bin","lib","tools","LICENSE"],"dependencies":{"commander":"~2.11.0","source-map":"~0.6.1"},"devDependencies":{"acorn":"~5.1.1","mocha":"~3.5.1","semver":"~5.4.1"},"scripts":{"test":"node test/run-tests.js"},"keywords":["uglify","uglify-es","uglify-js","minify","minifier","javascript","ecmascript","es5","es6","es7","es8","es2015","es2016","es2017","async","await"],"gitHead":"567cb0e4e33f6c967aa66add9dcaf79a34d55fb6","_id":"uglify-es@3.1.10","_npmVersion":"5.5.1","_nodeVersion":"9.2.0","_npmUser":{"name":"alexlamsl","email":"alexlamsl@gmail.com"},"dist":{"integrity":"sha512-RwBX0aOeHvO8MKKUeLCArQGb9OZ6xA+EqfVxsE9wqK0saFYFVLIFvHeeCOg61C6NO6KCuSiG9OjNjCA+OB4nzg==","shasum":"f1840c3b52771d17555a02ce158cf46f689384bd","tarball":"https://nexusrepo.pondevelopment.com/repository/npm-all/uglify-es/-/uglify-es-3.1.10.tgz"},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/uglify-es-3.1.10.tgz_1511111413308_0.42284194799140096"},"directories":{}},"3.2.0":{"name":"uglify-es","description":"JavaScript parser, mangler/compressor and beautifier toolkit for ES6+","homepage":"https://github.com/mishoo/UglifyJS2/tree/harmony","author":{"name":"Mihai Bazon","email":"mihai.bazon@gmail.com","url":"http://lisperator.net/"},"license":"BSD-2-Clause","version":"3.2.0","engines":{"node":">=0.8.0"},"maintainers":[{"name":"alexlamsl","email":"alexlamsl@gmail.com"}],"repository":{"type":"git","url":"git+https://github.com/mishoo/UglifyJS2.git#harmony"},"bugs":{"url":"https://github.com/mishoo/UglifyJS2/issues"},"main":"tools/node.js","bin":{"uglifyjs":"bin/uglifyjs"},"files":["bin","lib","tools","LICENSE"],"dependencies":{"commander":"~2.12.1","source-map":"~0.6.1"},"devDependencies":{"acorn":"~5.2.1","mocha":"~3.5.1","semver":"~5.4.1"},"scripts":{"test":"node test/run-tests.js"},"keywords":["uglify","uglify-es","uglify-js","minify","minifier","javascript","ecmascript","es5","es6","es7","es8","es2015","es2016","es2017","async","await"],"gitHead":"b84c99ef5c9fab0079f88de7b66b5f809c3d4f18","_id":"uglify-es@3.2.0","_npmVersion":"5.5.1","_nodeVersion":"9.2.0","_npmUser":{"name":"alexlamsl","email":"alexlamsl@gmail.com"},"dist":{"integrity":"sha512-eD4rjK4o6rzrvE1SMZJLQFEVMnWRUyIu6phJ0BXk5TIthMmP5B4QP0HI8o3bkQB5wf1N4WHA0leZAQyQBAd+Jg==","shasum":"fbbfb9dc465ec7e5065701b9720d0de977d0bc24","tarball":"https://nexusrepo.pondevelopment.com/repository/npm-all/uglify-es/-/uglify-es-3.2.0.tgz"},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/uglify-es-3.2.0.tgz_1511651359447_0.7841846523806453"},"directories":{}},"3.2.1":{"name":"uglify-es","description":"JavaScript parser, mangler/compressor and beautifier toolkit for ES6+","homepage":"https://github.com/mishoo/UglifyJS2/tree/harmony","author":{"name":"Mihai Bazon","email":"mihai.bazon@gmail.com","url":"http://lisperator.net/"},"license":"BSD-2-Clause","version":"3.2.1","engines":{"node":">=0.8.0"},"maintainers":[{"name":"alexlamsl","email":"alexlamsl@gmail.com"}],"repository":{"type":"git","url":"git+https://github.com/mishoo/UglifyJS2.git#harmony"},"bugs":{"url":"https://github.com/mishoo/UglifyJS2/issues"},"main":"tools/node.js","bin":{"uglifyjs":"bin/uglifyjs"},"files":["bin","lib","tools","LICENSE"],"dependencies":{"commander":"~2.12.1","source-map":"~0.6.1"},"devDependencies":{"acorn":"~5.2.1","mocha":"~3.5.1","semver":"~5.4.1"},"scripts":{"test":"node test/run-tests.js"},"keywords":["uglify","uglify-es","uglify-js","minify","minifier","javascript","ecmascript","es5","es6","es7","es8","es2015","es2016","es2017","async","await"],"gitHead":"606f7a5b370638b55599cf3f802320da2b5f8470","_id":"uglify-es@3.2.1","_npmVersion":"5.5.1","_nodeVersion":"9.2.0","_npmUser":{"name":"alexlamsl","email":"alexlamsl@gmail.com"},"dist":{"integrity":"sha512-c+Fy4VuGvPmT7mj7vEPjRR/iNFuXuOAkufhCtCvTGX0Hr4gCM9YwCnLgHkxr1ngqSODQaDObU3g8SF8uE/tY1w==","shasum":"93de0aad8a1bb629c8a316f686351bc4d6ece687","tarball":"https://nexusrepo.pondevelopment.com/repository/npm-all/uglify-es/-/uglify-es-3.2.1.tgz"},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/uglify-es-3.2.1.tgz_1512288131368_0.4764543066266924"},"directories":{}},"3.2.2":{"name":"uglify-es","description":"JavaScript parser, mangler/compressor and beautifier toolkit for ES6+","homepage":"https://github.com/mishoo/UglifyJS2/tree/harmony","author":{"name":"Mihai Bazon","email":"mihai.bazon@gmail.com","url":"http://lisperator.net/"},"license":"BSD-2-Clause","version":"3.2.2","engines":{"node":">=0.8.0"},"maintainers":[{"name":"alexlamsl","email":"alexlamsl@gmail.com"}],"repository":{"type":"git","url":"git+https://github.com/mishoo/UglifyJS2.git#harmony"},"bugs":{"url":"https://github.com/mishoo/UglifyJS2/issues"},"main":"tools/node.js","bin":{"uglifyjs":"bin/uglifyjs"},"files":["bin","lib","tools","LICENSE"],"dependencies":{"commander":"~2.12.1","source-map":"~0.6.1"},"devDependencies":{"acorn":"~5.2.1","mocha":"~3.5.1","semver":"~5.4.1"},"scripts":{"test":"node test/run-tests.js"},"keywords":["uglify","uglify-es","uglify-js","minify","minifier","javascript","ecmascript","es5","es6","es7","es8","es2015","es2016","es2017","async","await"],"gitHead":"f8ff349ba7a4ded3785f79be316c16433b2dbbc7","_id":"uglify-es@3.2.2","_npmVersion":"5.5.1","_nodeVersion":"9.2.0","_npmUser":{"name":"alexlamsl","email":"alexlamsl@gmail.com"},"dist":{"integrity":"sha512-l+s5VLzFwGJfS+fbqaGf/Dfwo1MF13jLOF2ekL0PytzqEqQ6cVppvHf4jquqFok+35USMpKjqkYxy6pQyUcuug==","shasum":"15c62b7775002c81b7987a1c49ecd3f126cace73","tarball":"https://nexusrepo.pondevelopment.com/repository/npm-all/uglify-es/-/uglify-es-3.2.2.tgz"},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/uglify-es-3.2.2.tgz_1512931006276_0.6818954600021243"},"directories":{}},"3.3.0":{"name":"uglify-es","description":"JavaScript parser, mangler/compressor and beautifier toolkit for ES6+","homepage":"https://github.com/mishoo/UglifyJS2/tree/harmony","author":{"name":"Mihai Bazon","email":"mihai.bazon@gmail.com","url":"http://lisperator.net/"},"license":"BSD-2-Clause","version":"3.3.0","engines":{"node":">=0.8.0"},"maintainers":[{"name":"alexlamsl","email":"alexlamsl@gmail.com"}],"repository":{"type":"git","url":"git+https://github.com/mishoo/UglifyJS2.git#harmony"},"bugs":{"url":"https://github.com/mishoo/UglifyJS2/issues"},"main":"tools/node.js","bin":{"uglifyjs":"bin/uglifyjs"},"files":["bin","lib","tools","LICENSE"],"dependencies":{"commander":"~2.12.1","source-map":"~0.6.1"},"devDependencies":{"acorn":"~5.2.1","mocha":"~3.5.1","semver":"~5.4.1"},"scripts":{"test":"node test/run-tests.js"},"keywords":["uglify","uglify-es","uglify-js","minify","minifier","javascript","ecmascript","es5","es6","es7","es8","es2015","es2016","es2017","async","await"],"gitHead":"01bb08b5535af8ed03be775650bdeb8797ce4883","_id":"uglify-es@3.3.0","_npmVersion":"5.5.1","_nodeVersion":"9.3.0","_npmUser":{"name":"alexlamsl","email":"alexlamsl@gmail.com"},"dist":{"integrity":"sha512-QmK4jsKMaYcZ/+T6K2gyJZJxxuM7sKO0z1H5+va25ECCh3i8c318BmgpvFxpu64p3AzdNlu42pYLmUisF8lqwA==","shasum":"a4acd1cf31f2768ec4d2e72adb739d7018de93aa","tarball":"https://nexusrepo.pondevelopment.com/repository/npm-all/uglify-es/-/uglify-es-3.3.0.tgz"},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/uglify-es-3.3.0.tgz_1514131546715_0.8242202706169337"},"directories":{}},"3.3.1":{"name":"uglify-es","description":"JavaScript parser, mangler/compressor and beautifier toolkit for ES6+","homepage":"https://github.com/mishoo/UglifyJS2/tree/harmony","author":{"name":"Mihai Bazon","email":"mihai.bazon@gmail.com","url":"http://lisperator.net/"},"license":"BSD-2-Clause","version":"3.3.1","engines":{"node":">=0.8.0"},"maintainers":[{"name":"alexlamsl","email":"alexlamsl@gmail.com"}],"repository":{"type":"git","url":"git+https://github.com/mishoo/UglifyJS2.git#harmony"},"bugs":{"url":"https://github.com/mishoo/UglifyJS2/issues"},"main":"tools/node.js","bin":{"uglifyjs":"bin/uglifyjs"},"files":["bin","lib","tools","LICENSE"],"dependencies":{"commander":"~2.12.1","source-map":"~0.6.1"},"devDependencies":{"acorn":"~5.2.1","mocha":"~3.5.1","semver":"~5.4.1"},"scripts":{"test":"node test/run-tests.js"},"keywords":["uglify","uglify-es","uglify-js","minify","minifier","javascript","ecmascript","es5","es6","es7","es8","es2015","es2016","es2017","async","await"],"gitHead":"a53784e0c59d5a242ba99965fcc24bdb8ef6ad52","_id":"uglify-es@3.3.1","_npmVersion":"5.5.1","_nodeVersion":"9.3.0","_npmUser":{"name":"alexlamsl","email":"alexlamsl@gmail.com"},"dist":{"integrity":"sha512-nrKboWNDxvxI6BPFSBkVzkkoxzcJQ4SLuIbRsPjhRH0GWcQvRSI8kCzUaQbmuZcIbdtp7QHEOCWNFRYQx6FUcQ==","shasum":"7556b208d3ac8584e81a2b70fff424abbcd7e3cc","tarball":"https://nexusrepo.pondevelopment.com/repository/npm-all/uglify-es/-/uglify-es-3.3.1.tgz"},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/uglify-es-3.3.1.tgz_1514207460920_0.6582619091495872"},"directories":{}},"3.3.2":{"name":"uglify-es","description":"JavaScript parser, mangler/compressor and beautifier toolkit for ES6+","homepage":"https://github.com/mishoo/UglifyJS2/tree/harmony","author":{"name":"Mihai Bazon","email":"mihai.bazon@gmail.com","url":"http://lisperator.net/"},"license":"BSD-2-Clause","version":"3.3.2","engines":{"node":">=0.8.0"},"maintainers":[{"name":"alexlamsl","email":"alexlamsl@gmail.com"}],"repository":{"type":"git","url":"git+https://github.com/mishoo/UglifyJS2.git#harmony"},"bugs":{"url":"https://github.com/mishoo/UglifyJS2/issues"},"main":"tools/node.js","bin":{"uglifyjs":"bin/uglifyjs"},"files":["bin","lib","tools","LICENSE"],"dependencies":{"commander":"~2.12.1","source-map":"~0.6.1"},"devDependencies":{"acorn":"~5.2.1","mocha":"~3.5.1","semver":"~5.4.1"},"scripts":{"test":"node test/run-tests.js"},"keywords":["uglify","uglify-es","uglify-js","minify","minifier","javascript","ecmascript","es5","es6","es7","es8","es2015","es2016","es2017","async","await"],"gitHead":"ef74f2eaafdcec9505752d6ebdd2ecd9f1dbd15f","_id":"uglify-es@3.3.2","_npmVersion":"5.5.1","_nodeVersion":"9.3.0","_npmUser":{"name":"alexlamsl","email":"alexlamsl@gmail.com"},"dist":{"integrity":"sha512-g7rGvx7YiFROLXKUtFMTw+YpTVV/XXPNvDUQfzwDTcB3vINwLUr3qXnkcPCu8VCIVjxI2EqaZ+sHoAxcYE/98w==","shasum":"2401df8be2a433314523753f28810793a40c5462","tarball":"https://nexusrepo.pondevelopment.com/repository/npm-all/uglify-es/-/uglify-es-3.3.2.tgz"},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/uglify-es-3.3.2.tgz_1514237074130_0.8208612075541168"},"directories":{}},"3.3.3":{"name":"uglify-es","description":"JavaScript parser, mangler/compressor and beautifier toolkit for ES6+","homepage":"https://github.com/mishoo/UglifyJS2/tree/harmony","author":{"name":"Mihai Bazon","email":"mihai.bazon@gmail.com","url":"http://lisperator.net/"},"license":"BSD-2-Clause","version":"3.3.3","engines":{"node":">=0.8.0"},"maintainers":[{"name":"alexlamsl","email":"alexlamsl@gmail.com"}],"repository":{"type":"git","url":"git+https://github.com/mishoo/UglifyJS2.git#harmony"},"bugs":{"url":"https://github.com/mishoo/UglifyJS2/issues"},"main":"tools/node.js","bin":{"uglifyjs":"bin/uglifyjs"},"files":["bin","lib","tools","LICENSE"],"dependencies":{"commander":"~2.12.1","source-map":"~0.6.1"},"devDependencies":{"acorn":"~5.2.1","mocha":"~3.5.1","semver":"~5.4.1"},"scripts":{"test":"node test/run-tests.js"},"keywords":["uglify","uglify-es","uglify-js","minify","minifier","javascript","ecmascript","es5","es6","es7","es8","es2015","es2016","es2017","async","await"],"gitHead":"53600e98697e2f8d902886101c7ade37cd775fa6","_id":"uglify-es@3.3.3","_npmVersion":"5.5.1","_nodeVersion":"9.3.0","_npmUser":{"name":"alexlamsl","email":"alexlamsl@gmail.com"},"dist":{"integrity":"sha512-W6JcJbOOBoEWvxGt4Y3b/SKMSaS2RsD4Ds7gKpCM/wTiDvxbEKCVqOQWodz5lISFAkkKen6TOKf+ed5GpNouxw==","shasum":"095f5314d2a5d27e215390e50fa90751473dac2f","tarball":"https://nexusrepo.pondevelopment.com/repository/npm-all/uglify-es/-/uglify-es-3.3.3.tgz"},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/uglify-es-3.3.3.tgz_1514496732410_0.817276930436492"},"directories":{}},"3.3.4":{"name":"uglify-es","description":"JavaScript parser, mangler/compressor and beautifier toolkit for ES6+","homepage":"https://github.com/mishoo/UglifyJS2/tree/harmony","author":{"name":"Mihai Bazon","email":"mihai.bazon@gmail.com","url":"http://lisperator.net/"},"license":"BSD-2-Clause","version":"3.3.4","engines":{"node":">=0.8.0"},"maintainers":[{"name":"alexlamsl","email":"alexlamsl@gmail.com"}],"repository":{"type":"git","url":"git+https://github.com/mishoo/UglifyJS2.git#harmony"},"bugs":{"url":"https://github.com/mishoo/UglifyJS2/issues"},"main":"tools/node.js","bin":{"uglifyjs":"bin/uglifyjs"},"files":["bin","lib","tools","LICENSE"],"dependencies":{"commander":"~2.12.1","source-map":"~0.6.1"},"devDependencies":{"acorn":"~5.2.1","mocha":"~3.5.1","semver":"~5.4.1"},"scripts":{"test":"node test/run-tests.js"},"keywords":["uglify","uglify-es","uglify-js","minify","minifier","javascript","ecmascript","es5","es6","es7","es8","es2015","es2016","es2017","async","await"],"gitHead":"a6653e2102d0ae865272f8ce5b3495e17f8b99fe","_id":"uglify-es@3.3.4","_npmVersion":"5.5.1","_nodeVersion":"9.3.0","_npmUser":{"name":"alexlamsl","email":"alexlamsl@gmail.com"},"dist":{"integrity":"sha512-vDOyDaf7LcABZI5oJt8bin5FD8kYONux5jd8FY6SsV2SfD+MMXaPeGUotysbycSxdu170y5IQ8FvlKzU/TUryw==","shasum":"2d592678791e5310456bbc95e952139e3b13167a","tarball":"https://nexusrepo.pondevelopment.com/repository/npm-all/uglify-es/-/uglify-es-3.3.4.tgz"},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/uglify-es-3.3.4.tgz_1514696270598_0.6652897861786187"},"directories":{}},"3.3.5":{"name":"uglify-es","description":"JavaScript parser, mangler/compressor and beautifier toolkit for ES6+","homepage":"https://github.com/mishoo/UglifyJS2/tree/harmony","author":{"name":"Mihai Bazon","email":"mihai.bazon@gmail.com","url":"http://lisperator.net/"},"license":"BSD-2-Clause","version":"3.3.5","engines":{"node":">=0.8.0"},"maintainers":[{"name":"alexlamsl","email":"alexlamsl@gmail.com"}],"repository":{"type":"git","url":"git+https://github.com/mishoo/UglifyJS2.git#harmony"},"bugs":{"url":"https://github.com/mishoo/UglifyJS2/issues"},"main":"tools/node.js","bin":{"uglifyjs":"bin/uglifyjs"},"files":["bin","lib","tools","LICENSE"],"dependencies":{"commander":"~2.12.1","source-map":"~0.6.1"},"devDependencies":{"acorn":"~5.2.1","mocha":"~3.5.1","semver":"~5.4.1"},"scripts":{"test":"node test/run-tests.js"},"keywords":["uglify","uglify-es","uglify-js","minify","minifier","javascript","ecmascript","es5","es6","es7","es8","es2015","es2016","es2017","async","await"],"gitHead":"1f3f8f25eb79f25a25600cbaa32b93e7f0c5fd27","_id":"uglify-es@3.3.5","_npmVersion":"5.5.1","_nodeVersion":"9.3.0","_npmUser":{"name":"alexlamsl","email":"alexlamsl@gmail.com"},"dist":{"integrity":"sha512-7IvaFuYtfbcXm0fGb13mmRYVQdzQDXETAtvYHbCDPt2V88Y8l2HaULOyW6ueoYA0JhGIcLK7dtHkDcBWySqnBw==","shasum":"cf7e695da81999f85196b15e2978862f13212f88","tarball":"https://nexusrepo.pondevelopment.com/repository/npm-all/uglify-es/-/uglify-es-3.3.5.tgz"},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/uglify-es-3.3.5.tgz_1515351143715_0.45063617802225053"},"directories":{}},"3.3.6":{"name":"uglify-es","description":"JavaScript parser, mangler/compressor and beautifier toolkit for ES6+","homepage":"https://github.com/mishoo/UglifyJS2/tree/harmony","author":{"name":"Mihai Bazon","email":"mihai.bazon@gmail.com","url":"http://lisperator.net/"},"license":"BSD-2-Clause","version":"3.3.6","engines":{"node":">=0.8.0"},"maintainers":[{"name":"alexlamsl","email":"alexlamsl@gmail.com"}],"repository":{"type":"git","url":"git+https://github.com/mishoo/UglifyJS2.git#harmony"},"main":"tools/node.js","bin":{"uglifyjs":"bin/uglifyjs"},"files":["bin","lib","tools","LICENSE"],"dependencies":{"commander":"~2.13.0","source-map":"~0.6.1"},"devDependencies":{"acorn":"~5.3.0","mocha":"~3.5.1","semver":"~5.4.1"},"scripts":{"test":"node test/run-tests.js"},"keywords":["uglify","uglify-es","uglify-js","minify","minifier","javascript","ecmascript","es5","es6","es7","es8","es2015","es2016","es2017","async","await"],"gitHead":"aa1786dedfb21680f049bc37be521b3a877cd5ca","bugs":{"url":"https://github.com/mishoo/UglifyJS2/issues"},"_id":"uglify-es@3.3.6","_npmVersion":"5.5.1","_nodeVersion":"9.3.0","_npmUser":{"name":"alexlamsl","email":"alexlamsl@gmail.com"},"dist":{"integrity":"sha512-Wcay5LiBPvcBP1UY0PeCJmtL48dKYQmPD9pzdpkcHTcTkCr5C00C+TXXSfxolEO5D15cGib+ey3vLcCdt3GvHg==","shasum":"463c760057fadfe54c2d046de80152d96db048a3","tarball":"https://nexusrepo.pondevelopment.com/repository/npm-all/uglify-es/-/uglify-es-3.3.6.tgz"},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/uglify-es-3.3.6.tgz_1515866703665_0.5878329556435347"},"directories":{}},"3.3.7":{"name":"uglify-es","description":"JavaScript parser, mangler/compressor and beautifier toolkit for ES6+","homepage":"https://github.com/mishoo/UglifyJS2/tree/harmony","author":{"name":"Mihai Bazon","email":"mihai.bazon@gmail.com","url":"http://lisperator.net/"},"license":"BSD-2-Clause","version":"3.3.7","engines":{"node":">=0.8.0"},"maintainers":[{"name":"alexlamsl","email":"alexlamsl@gmail.com"}],"repository":{"type":"git","url":"git+https://github.com/mishoo/UglifyJS2.git#harmony"},"main":"tools/node.js","bin":{"uglifyjs":"bin/uglifyjs"},"files":["bin","lib","tools","LICENSE"],"dependencies":{"commander":"~2.13.0","source-map":"~0.6.1"},"devDependencies":{"acorn":"~5.3.0","mocha":"~3.5.1","semver":"~5.4.1"},"scripts":{"test":"node test/run-tests.js"},"keywords":["uglify","uglify-es","uglify-js","minify","minifier","javascript","ecmascript","es5","es6","es7","es8","es2015","es2016","es2017","async","await"],"gitHead":"1b2e6b81a2ed094cb321f7e47e82ab26513318f0","bugs":{"url":"https://github.com/mishoo/UglifyJS2/issues"},"_id":"uglify-es@3.3.7","_npmVersion":"5.5.1","_nodeVersion":"9.3.0","_npmUser":{"name":"alexlamsl","email":"alexlamsl@gmail.com"},"dist":{"integrity":"sha512-fGMnE6SsDRsCjxm78C+lv7MuXsse/dtF7QuTUT43BYf4jlxPjd+XTnGB8YjaCQJ3sv2LT4zk0mwpp9+QJocU6g==","shasum":"d1249af668666aba7cb1163e277455be9eb393cf","tarball":"https://nexusrepo.pondevelopment.com/repository/npm-all/uglify-es/-/uglify-es-3.3.7.tgz"},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/uglify-es-3.3.7.tgz_1515929327014_0.9011693557258695"},"directories":{}},"3.3.8":{"name":"uglify-es","description":"JavaScript parser, mangler/compressor and beautifier toolkit for ES6+","homepage":"https://github.com/mishoo/UglifyJS2/tree/harmony","author":{"name":"Mihai Bazon","email":"mihai.bazon@gmail.com","url":"http://lisperator.net/"},"license":"BSD-2-Clause","version":"3.3.8","engines":{"node":">=0.8.0"},"maintainers":[{"name":"alexlamsl","email":"alexlamsl@gmail.com"}],"repository":{"type":"git","url":"git+https://github.com/mishoo/UglifyJS2.git#harmony"},"main":"tools/node.js","bin":{"uglifyjs":"bin/uglifyjs"},"files":["bin","lib","tools","LICENSE"],"dependencies":{"commander":"~2.13.0","source-map":"~0.6.1"},"devDependencies":{"acorn":"~5.3.0","mocha":"~3.5.1","semver":"~5.4.1"},"scripts":{"test":"node test/run-tests.js"},"keywords":["uglify","uglify-es","uglify-js","minify","minifier","javascript","ecmascript","es5","es6","es7","es8","es2015","es2016","es2017","async","await"],"gitHead":"c7c7960b5f54a3662873f37208d63072650830af","bugs":{"url":"https://github.com/mishoo/UglifyJS2/issues"},"_id":"uglify-es@3.3.8","_npmVersion":"5.5.1","_nodeVersion":"9.3.0","_npmUser":{"name":"alexlamsl","email":"alexlamsl@gmail.com"},"dist":{"integrity":"sha512-j8li0jWcAN6yBuAVYFZEFyYINZAm4WEdMwkA6qXFi4TLrze3Mp0Le7QjW6LR9HQjQJ2zRa9VgnFLs3PatijWOw==","shasum":"f2c68e6cff0d0f9dc9577e4da207151c2e753b7e","tarball":"https://nexusrepo.pondevelopment.com/repository/npm-all/uglify-es/-/uglify-es-3.3.8.tgz"},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/uglify-es-3.3.8.tgz_1516531111477_0.9351179737132043"},"directories":{}},"3.3.9":{"name":"uglify-es","description":"JavaScript parser, mangler/compressor and beautifier toolkit for ES6+","homepage":"https://github.com/mishoo/UglifyJS2/tree/harmony","author":{"name":"Mihai Bazon","email":"mihai.bazon@gmail.com","url":"http://lisperator.net/"},"license":"BSD-2-Clause","version":"3.3.9","engines":{"node":">=0.8.0"},"maintainers":[{"name":"alexlamsl","email":"alexlamsl@gmail.com"}],"repository":{"type":"git","url":"git+https://github.com/mishoo/UglifyJS2.git#harmony"},"main":"tools/node.js","bin":{"uglifyjs":"bin/uglifyjs"},"files":["bin","lib","tools","LICENSE"],"dependencies":{"commander":"~2.13.0","source-map":"~0.6.1"},"devDependencies":{"acorn":"~5.3.0","mocha":"~3.5.1","semver":"~5.4.1"},"scripts":{"test":"node test/run-tests.js"},"keywords":["uglify","uglify-es","uglify-js","minify","minifier","javascript","ecmascript","es5","es6","es7","es8","es2015","es2016","es2017","async","await"],"gitHead":"8e595171b9794ea92fea65c1b30d627083064187","bugs":{"url":"https://github.com/mishoo/UglifyJS2/issues"},"_id":"uglify-es@3.3.9","_npmVersion":"5.5.1","_nodeVersion":"9.3.0","_npmUser":{"name":"alexlamsl","email":"alexlamsl@gmail.com"},"dist":{"integrity":"sha512-r+MU0rfv4L/0eeW3xZrd16t4NZfK8Ld4SWVglYBb7ez5uXFWHuVRs6xCTrf1yirs9a4j4Y27nn7SRfO6v67XsQ==","shasum":"0c1c4f0700bed8dbc124cdb304d2592ca203e677","tarball":"https://nexusrepo.pondevelopment.com/repository/npm-all/uglify-es/-/uglify-es-3.3.9.tgz"},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/uglify-es-3.3.9.tgz_1517072064861_0.4805743731558323"},"directories":{}},"3.3.10":{"name":"uglify-es","description":"JavaScript parser, mangler/compressor and beautifier toolkit for ES6+","homepage":"https://github.com/mishoo/UglifyJS2/tree/harmony","author":{"name":"Mihai Bazon","email":"mihai.bazon@gmail.com","url":"http://lisperator.net/"},"license":"BSD-2-Clause","version":"3.3.10","engines":{"node":">=0.8.0"},"maintainers":[{"name":"alexlamsl","email":"alexlamsl@gmail.com"}],"repository":{"type":"git","url":"git+https://github.com/mishoo/UglifyJS2.git#harmony"},"main":"tools/node.js","bin":{"uglifyjs":"bin/uglifyjs"},"files":["bin","lib","tools","LICENSE"],"dependencies":{"commander":"~2.14.1","source-map":"~0.6.1"},"devDependencies":{"acorn":"~5.4.1","mocha":"~3.5.1","semver":"~5.5.0"},"scripts":{"test":"node test/run-tests.js"},"keywords":["uglify","uglify-es","uglify-js","minify","minifier","javascript","ecmascript","es5","es6","es7","es8","es2015","es2016","es2017","async","await"],"gitHead":"aebc916215a16a2c4d2d8d2565f7824c349bf51f","bugs":{"url":"https://github.com/mishoo/UglifyJS2/issues"},"_id":"uglify-es@3.3.10","_npmVersion":"5.6.0","_nodeVersion":"9.5.0","_npmUser":{"name":"alexlamsl","email":"alexlamsl@gmail.com"},"dist":{"integrity":"sha512-rPzPisCzW68Okj1zNrfa2dR9uEm43SevDmpR6FChoZABFk9dANGnzzBMgHYUXI3609//63fnVkyQ1SQmAMyjww==","shasum":"8b0b7992cebe20edc26de1bf325cef797b8f3fa5","tarball":"https://nexusrepo.pondevelopment.com/repository/npm-all/uglify-es/-/uglify-es-3.3.10.tgz","fileCount":20,"unpackedSize":773980},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/uglify-es_3.3.10_1518098674523_0.6017009879470112"}}},"name":"uglify-es","time":{"modified":"2020-03-10T13:52:31.735Z","created":"2017-05-09T19:18:47.781Z","3.0.2":"2017-05-09T19:18:47.781Z","3.0.3":"2017-05-10T09:27:35.440Z","3.0.4":"2017-05-12T07:50:11.836Z","3.0.5":"2017-05-15T14:21:23.339Z","3.0.7":"2017-05-16T17:36:27.560Z","3.0.8":"2017-05-18T08:32:54.976Z","3.0.9":"2017-05-19T09:38:49.506Z","3.0.10":"2017-05-20T20:36:52.226Z","3.0.11":"2017-05-23T16:57:53.262Z","3.0.12":"2017-05-27T17:26:36.570Z","3.0.13":"2017-05-29T15:22:45.619Z","3.0.14":"2017-05-31T08:57:17.195Z","3.0.15":"2017-06-01T13:08:28.217Z","3.0.17":"2017-06-15T17:33:00.822Z","3.0.18":"2017-06-18T10:04:50.370Z","3.0.19":"2017-06-21T22:13:44.974Z","3.0.20":"2017-06-25T10:03:26.583Z","3.0.21":"2017-06-28T19:50:47.246Z","3.0.22":"2017-06-30T06:43:24.109Z","3.0.23":"2017-07-02T13:29:15.497Z","3.0.24":"2017-07-08T07:39:31.757Z","3.0.25":"2017-07-16T05:24:50.932Z","3.0.26":"2017-07-23T09:39:19.360Z","3.0.27":"2017-07-30T08:34:43.489Z","3.0.28":"2017-08-19T18:15:59.172Z","3.1.0":"2017-09-10T13:44:37.298Z","3.1.1":"2017-09-17T07:37:30.832Z","3.1.2":"2017-09-24T03:22:33.693Z","3.1.3":"2017-10-01T08:45:21.750Z","3.1.4":"2017-10-21T17:54:11.799Z","3.1.5":"2017-10-21T17:54:36.763Z","3.1.6":"2017-10-29T12:45:19.068Z","3.1.7":"2017-11-05T09:35:57.043Z","3.1.8":"2017-11-06T22:40:02.927Z","3.1.9":"2017-11-11T12:18:33.808Z","3.1.10":"2017-11-19T17:10:13.581Z","3.2.0":"2017-11-25T23:09:19.750Z","3.2.1":"2017-12-03T08:02:11.506Z","3.2.2":"2017-12-10T18:36:46.421Z","3.3.0":"2017-12-24T16:05:47.966Z","3.3.1":"2017-12-25T13:11:01.187Z","3.3.2":"2017-12-25T21:24:34.232Z","3.3.3":"2017-12-28T21:32:12.606Z","3.3.4":"2017-12-31T04:57:50.883Z","3.3.5":"2018-01-07T18:52:23.969Z","3.3.6":"2018-01-13T18:05:03.848Z","3.3.7":"2018-01-14T11:28:47.126Z","3.3.8":"2018-01-21T10:38:31.940Z","3.3.9":"2018-01-27T16:54:24.996Z","3.3.10":"2018-02-08T14:04:34.682Z"},"readmeFilename":"README.md","_id":"uglify-es","homepage":"https://github.com/mishoo/UglifyJS2/tree/harmony"}