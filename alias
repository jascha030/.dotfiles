#!/bin/zsh

-='cd -'
...=../..
....=../../..
.....=../../../..
......=../../../../..
1='cd -1'
2='cd -2'
3='cd -3'
4='cd -4'
5='cd -5'
6='cd -6'
7='cd -7'
8='cd -8'
9='cd -9'
_='sudo '
afind='ack -il'
brewup='brew update && brew outdated; brew upgrade && brew cleanup; brew doctor'
c=clear
c:pcs='composer run format'
c:pu='composer run phpunit'
c:reset='rm -rf vendor/ composer.lock && composer clear-cache && composer install'
cat=bat
checkitalics='echo -e '\''\e[3mitalic\e[23m'\'
clone:sb-starter='git clone git@bitbucket.org:socialbrothers/wordpress-starter-theme.git'
clone:wp='git clone git@github.com:wordpress/wordpress'
cp:broodje='echo "38. Witte Italiaanse Bol met Gerookte Kip, Avocado mayonaise met extra avocado en een blikkie cola. - €9,00" | pbcopy'
cp:dir='echo /Users/jaschavanaalst/.dotfiles | pbcopy'
cp:sbcrepo='echo "{\"type\": \"composer\", \"url\": \"https://composer.sbdev.nl/\"}" | pp_json | pbcopy'
cp:shrug='echo '\''¯\_(ツ)_/¯'\'' | pbcopy'
cp:ssh='pbcopy < /Users/jaschavanaalst/.ssh/id_rsa.pub'
create:gitignore='echo $'\''.idea\n\n.vscode\n\nvendor\n\n**.cache\n.DS_Store\n'\'' > .gitignore'
dev='cd /Users/jaschavanaalst/.development/Projects'
df='cd /Users/jaschavanaalst/.dotfiles'
dfup='sh /Users/jaschavanaalst/.dotfiles/rcup'
edit='nvim aliases'
egrep='egrep --color=auto --exclude-dir={.bzr,CVS,.git,.hg,.svn,.idea,.tox}'
fgrep='fgrep --color=auto --exclude-dir={.bzr,CVS,.git,.hg,.svn,.idea,.tox}'
fpb='fzf --preview '\''bat --color=always --style=numbers --line-range=:500 {}'\'
g=git
ga='git add'
gaa='git add --all'
gam='git am'
gama='git am --abort'
gamc='git am --continue'
gams='git am --skip'
gamscp='git am --show-current-patch'
gap='git apply'
gapa='git add --patch'
gapt='git apply --3way'
gau='git add --update'
gav='git add --verbose'
gb='git branch'
gbD='git branch -D'
gba='git branch -a'
gbd='git branch -d'
gbda='git branch --no-color --merged | command grep -vE "^([+*]|\s*($(git_main_branch)|$(git_develop_branch))\s*$)" | command xargs git branch -d 2>/dev/null'
gbl='git blame -b -w'
gbnm='git branch --no-merged'
gbr='git branch --remote'
gbs='git bisect'
gbsb='git bisect bad'
gbsg='git bisect good'
gbsr='git bisect reset'
gbss='git bisect start'
gc='git commit -v'
'gc!'='git commit -v --amend'
gca='git commit -v -a'
'gca!'='git commit -v -a --amend'
gcam='git commit -a -m'
'gcan!'='git commit -v -a --no-edit --amend'
'gcans!'='git commit -v -a -s --no-edit --amend'
gcas='git commit -a -s'
gcasm='git commit -a -s -m'
gcb='git checkout -b'
gcd='git checkout $(git_develop_branch)'
gcf='git config --list'
gcl='git clone --recurse-submodules'
gclean='git clean -id'
gcm='git checkout $(git_main_branch)'
gcmsg='git commit -m'
'gcn!'='git commit -v --no-edit --amend'
gco='git checkout'
gcor='git checkout --recurse-submodules'
gcount='git shortlog -sn'
gcp='git cherry-pick'
gcpa='git cherry-pick --abort'
gcpc='git cherry-pick --continue'
gcs='git commit -S'
gcsm='git commit -s -m'
gcss='git commit -S -s'
gcssm='git commit -S -s -m'
gd='git diff'
gdca='git diff --cached'
gdct='git describe --tags $(git rev-list --tags --max-count=1)'
gdcw='git diff --cached --word-diff'
gds='git diff --staged'
gdt='git diff-tree --no-commit-id --name-only -r'
gdup='git diff @{upstream}'
gdw='git diff --word-diff'
gf='git fetch'
gfa='git fetch --all --prune --jobs=10'
gfg='git ls-files | grep'
gfo='git fetch origin'
gg='git gui citool'
gga='git gui citool --amend'
ggpull='git pull origin "$(git_current_branch)"'
ggpur=ggu
ggpush='git push origin "$(git_current_branch)"'
ggsup='git branch --set-upstream-to=origin/$(git_current_branch)'
ghh='git help'
gignore='git update-index --assume-unchanged'
gignored='git ls-files -v | grep "^[[:lower:]]"'
git-svn-dcommit-push='git svn dcommit && git push github $(git_main_branch):svntrunk'
gk='\gitk --all --branches &!'
gke='\gitk --all $(git log -g --pretty=%h) &!'
gl='git pull'
glg='git log --stat'
glgg='git log --graph'
glgga='git log --graph --decorate --all'
glgm='git log --graph --max-count=10'
glgp='git log --stat -p'
glo='git log --oneline --decorate'
globurl='noglob urlglobber '
glod='git log --graph --pretty='\''%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%ad) %C(bold blue)<%an>%Creset'\'
glods='git log --graph --pretty='\''%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%ad) %C(bold blue)<%an>%Creset'\'' --date=short'
glog='git log --oneline --decorate --graph'
gloga='git log --oneline --decorate --graph --all'
glol='git log --graph --pretty='\''%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%ar) %C(bold blue)<%an>%Creset'\'
glola='git log --graph --pretty='\''%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%ar) %C(bold blue)<%an>%Creset'\'' --all'
glols='git log --graph --pretty='\''%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%ar) %C(bold blue)<%an>%Creset'\'' --stat'
glp=_git_log_prettily
glum='git pull upstream $(git_main_branch)'
gm='git merge'
gma='git merge --abort'
gmom='git merge origin/$(git_main_branch)'
gmtl='git mergetool --no-prompt'
gmtlvim='git mergetool --no-prompt --tool=vimdiff'
gmum='git merge upstream/$(git_main_branch)'
gp='git push'
gpd='git push --dry-run'
gpf='git push --force-with-lease'
'gpf!'='git push --force'
gpoat='git push origin --all && git push origin --tags'
gpr='git pull --rebase'
gpristine='git reset --hard && git clean -dffx'
gpsup='git push --set-upstream origin $(git_current_branch)'
gpu='git push upstream'
gpv='git push -v'
gr='git remote'
gra='git remote add'
grb='git rebase'
grba='git rebase --abort'
grbc='git rebase --continue'
grbd='git rebase $(git_develop_branch)'
grbi='git rebase -i'
grbm='git rebase $(git_main_branch)'
grbo='git rebase --onto'
grbom='git rebase origin/$(git_main_branch)'
grbs='git rebase --skip'
grep='grep --color=auto --exclude-dir={.bzr,CVS,.git,.hg,.svn,.idea,.tox}'
grev='git revert'
grh='git reset'
grhh='git reset --hard'
grm='git rm'
grmc='git rm --cached'
grmv='git remote rename'
groh='git reset origin/$(git_current_branch) --hard'
grrm='git remote remove'
grs='git restore'
grset='git remote set-url'
grss='git restore --source'
grst='git restore --staged'
grt='cd "$(git rev-parse --show-toplevel || echo .)"'
gru='git reset --'
grup='git remote update'
grv='git remote -v'
gsb='git status -sb'
gsd='git svn dcommit'
gsh='git show'
gsi='git submodule init'
gsps='git show --pretty=short --show-signature'
gsr='git svn rebase'
gss='git status -s'
gst='git status'
gsta='git stash push'
gstaa='git stash apply'
gstall='git stash --all'
gstc='git stash clear'
gstd='git stash drop'
gstl='git stash list'
gstp='git stash pop'
gsts='git stash show --text'
gstu='gsta --include-untracked'
gsu='git submodule update'
gsw='git switch'
gswc='git switch -c'
gswd='git switch $(git_develop_branch)'
gswm='git switch $(git_main_branch)'
gtl='gtl(){ git tag --sort=-v:refname -n -l "${1}*" }; noglob gtl'
gts='git tag -s'
gtv='git tag | sort -V'
gunignore='git update-index --no-assume-unchanged'
gunwip='git log -n 1 | grep -q -c "\-\-wip\-\-" && git reset HEAD~1'
gup='git pull --rebase'
gupa='git pull --rebase --autostash'
gupav='git pull --rebase --autostash -v'
gupom='git pull --rebase origin $(git_main_branch)'
gupomi='git pull --rebase=interactive origin $(git_main_branch)'
gupv='git pull --rebase -v'
gwch='git whatchanged -p --abbrev-commit --pretty=medium'
gwip='git add -A; git rm $(git ls-files --deleted) 2> /dev/null; git commit --no-verify --no-gpg-sign -m "--wip-- [skip ci]"'
history=omz_history
idea='idea .'
kraken='$(open gitkraken://repo/$PWD)'
l='ls -lah'
la='ls -lAh'
lc='ll | lolcat'
listpath='echo "/var/folders/wm/pnp_srkx357g3j62sn_sx4yh0000gn/T/fnm_multishells/54471_1655752218313/bin:/usr/local/sbin:/usr/local/opt/openjdk/bin:/usr/local/opt/openssl@1.1/bin:node_modules/.bin:vendor/bin:/Users/jaschavanaalst/bin:/Users/jaschavanaalst/.composer/vendor/bin:/Users/jaschavanaalst/.node/bin:/Users/jaschavanaalst/.yarn/bin:/Users/jaschavanaalst/.config/yarn/global/node_modules/.bin:/Users/jaschavanaalst/.gem/ruby/2.6.0/bin:/Users/jaschavanaalst/tools/lua-language-server/bin/macOS:/var/folders/wm/pnp_srkx357g3j62sn_sx4yh0000gn/T/fnm_multishells/54182_1655752170077/bin:/Users/jaschavanaalst/.cargo/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/opt/X11/bin:/Library/Apple/usr/bin:/Users/jaschavanaalst/.antigen/bundles/robbyrussell/oh-my-zsh/lib:/Users/jaschavanaalst/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/git:/Users/jaschavanaalst/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/fzf:/Users/jaschavanaalst/.antigen/bundles/leophys/zsh-plugin-fzf-finder:/Users/jaschavanaalst/.antigen/bundles/Aloxaf/fzf-tab:/Users/jaschavanaalst/.antigen/bundles/chrissicool/zsh-256color:/Users/jaschavanaalst/.antigen/bundles/desyncr/auto-ls:/Users/jaschavanaalst/.antigen/bundles/zsh-users/zsh-completions:/Users/jaschavanaalst/.antigen/bundles/zsh-users/zsh-autosuggestions:/Users/jaschavanaalst/.antigen/bundles/zsh-users/zsh-syntax-highlighting" | tr '\'':'\'' '\''\n'\'
ll='lsd -Ahl --color --group-dirs=first'
llb='ll | bat'
ls='ls -G'
lsa='ls -lah'
luamake=/Users/jaschavanaalst/tools/lua-language-server/3rd/luamake/luamake
md='mkdir -p'
php7.4='valet use php@7.4 && composer global update'
php74='valet use php@7.4 && composer global update'
php8='valet use php@8.0 && composer global update'
php8.0='valet use php@8.0 && composer global update'
php8.1='valet use php && composer global update'
php81='valet use php && composer global update'
pstorm='phpstorm .'
rd=rmdir
readme='bat /Users/jaschavanaalst/.dotfiles/README.md'
root='$(git rev-parse --show-toplevel)'
rr='source /Users/jaschavanaalst/.zshrc'
rre='exec zsh'
run-help=man
scrsvr='open -a ScreenSaverEngine'
tm-auto='sudo tmutil startbackup --auto; tmutil status'
valetr='valetrm && valet restart'
valetrm='rm /Users/jaschavanaalst/.config/valet/valet.sock'
vim=nvim
which-command=whence
wstorm='webstorm .'
x=exit
zprofrr='env PROFILE_ZSH=1 exec zsh'
