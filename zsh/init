#!/usr/bin/env zsh

#######################################################################################################################
#                                                     Defaults
#######################################################################################################################


# Default directory for functions.
# 
# Add by exporting (array) `DOT_AUTOLOAD_DIRS`.
local AUTOLOAD_DIRS=( ${DOT_ZSH}/functions ) 

# Default directory for completions.
# 
# Add by exporting (array) `DOT_COMP_DIRS`.
local COMP_DIRS=( ${DOT_ZSH}/completions )


# Default sources.
#
# Files to be sourced before the ones added in `.zshrc`.
local _SOURCES=( ${DOT_ZSH}/path )


# ENV variables defaults, can be overwritten in .zshrc or any earlier config.


# Default antigen.zsh path.
# 
# Based on a normal install, overwrite if installed through brew.
if ! (( ${+DOT_ANTIGEN_PATH} )); then 
    export DOT_ANTIGEN_PATH="${HOME}/antigen.zsh"
fi

# Default antigenrc path.
#
# Prob. no reason to overwrite, 
# Antigen starts acting weird when rc not located @ $HOME.
if ! (( ${+DOT_ANTIGEN_RC_PATH} )); then 
    export DOT_ANTIGEN_RC_PATH="${HOME}/.antigenrc"
fi


# Lazy load functions that are only used conditionally.
# All functions reside in the default functions dir.


# Checks if directories or creates them using `mkdir -p`.
function assert_dirs {
    # undefined 
    builtin autoload -X
}


# Checks if files exist or creates them using `touch`.
function assert_files {
    # undefined 
    builtin autoload -X
}

# Utility function, to merge arrays...
function merge_arrays {
    # undefined 
    builtin autoload -X
}

# Loads files in default $DOT_ZSH_DIR.
# Define by exporting (array) $DOT_ZSH_SOURCES.
function source_zsh_dotfiles {
  local d

  for d in "$@" ; do
    [[ -f "${DOT_ZSH}/${d}" ]] && source "${DOT_ZSH}/${d}"
  done
}


# functions for internal usage.


# Autoload all files in dir.
function __autoload_dirs {
    local a
    
    for a in "$@"; do
        autoload -Uz ${a}/*(.:t)
    done
}

# Load antigen plugins.
function __df_load_antigen {
    # Todo: check
    if [[ ! -f "$DOT_ANTIGEN_PATH" ]]; then 
        curl -L git.io/antigen > $DOT_ANTIGEN_PATH
    fi
  
    source "$DOT_ANTIGEN_PATH"

    if [[ -f "$DOT_ANTIGEN_RC_PATH" ]]; then 
        antigen init "$DOT_ANTIGEN_RC_PATH"
    fi
}

# Executes eval on provided statements.
function __df_do_evaluations {
    local e 
    
    for e in "$@"; do 
        eval $e
    done
}


# Function that executes all initialization logic.
# 
# * Asserts required dirs and files.
# * Adds autoload and completion dirs.
# * Loads antigen with `.antigenrc`.
#
function __df_load {
    # Bootstrap required dirs and files
    if (( ${+DOT_REQUIRED_DIRS} )); then 
        assert_dirs "${DOT_REQUIRED_DIRS[@]}"
    fi

    if (( ${+DOT_REQUIRED_FILES} )); then
        assert_files "${DOT_REQUIRED_FILES[@]}"
    fi


    # Merge defaults with user defined.
    (( ${+DOT_AUTOLOAD_DIRS} )) && $AUTOLOAD_DIRS=merge_arrays "$DOT_AUTOLOAD_DIRS" "$AUTOLOAD_DIRS"

    (( ${+DOT_COMP_DIRS} )) && $COMP_DIRS=merge_arrays "$DOT_COMP_DIRS" "$COMP_DIRS"
    
    (( ${+DOT_PLUGIN_DIRS} )) && $PLUGIN_DIRS=merge_arrays "$DOT_PLUGIN_DIRS" "$PLUGIN_DIRS"
    
    export fpath=( 
      "${AUTOLOAD_DIRS[@]}" 
      "${COMP_DIRS[@]}"
      "${PLUGIN_DIRS[@]}"
      "${fpath[@]}"
    )
    
    # Load stuff that needs to be loaded before Antigen
    __autoload_dirs "${AUTOLOAD_DIRS[@]}"
    
    # Completions
    __autoload_dirs "${COMP_DIRS[@]}"
    
    # Source path file.
    safe_source "${_SOURCES}"
    typeset -aU path
    
    # Source other zsh dotfiles
    if (( ${+DOT_SOURCES} )); then 
        safe_source "${DOT_SOURCES[@]}"
    fi

    __df_load_antigen

    
    if (( ${+DOT_EVALUATIONS} )); then 
        __df_do_evaluations "${DOT_EVALUATIONS[@]}"
    fi

    
}


# Execute bootstrap logic.
__df_load

