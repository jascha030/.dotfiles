#!/usr/bin/env zsh

#######################################################################################################################
# By Jascha030                                  Dotfiles Initialization         https://github.io/jascha030/.dotfiles #
#######################################################################################################################

# Alternative dir for histfiles
! (( ${+DOT_DATA_DIR} )) && export DOT_DATA_DIR="${XDG_CONFIG_HOME}"/datafiles
# Prompt height in lines
! (( DOT_PROMPT_HEIGHT )) && export DOT_PROMPT_HEIGHT=2

# Conditionals, if current term is in neovim .
if (( ${+VIM} && ${+VIMRUNTIME} && ${+MYVIMRC} )); then
    export _IS_VIMTERM=true
    export LOL_MSG="${DOT_NEOVIM_LOL_MSG}"
else
    export _IS_VIMTERM=false
    export LOL_MSG="${DOT_DEFAULT_LOL_MSG}"
fi

#--------------------------------------------- Internally used functions ---------------------------------------------#

function __fpath_add {
    fpath=( "$@" "${fpath[@]}" )
}

function __path_add {
    path=( "$@" "${path[@]}" )
}

function __autoload {
    local a

    for a in "$@"; do
        [[ -d "$a" ]] && autoload -Uz "${a}"/*(.:t)
    done
}

#------------------------------------------------------ Init ---------------------------------------------------------#

(( ${+DOT_COMP_DIRS} )) && __fpath_add "${DOT_COMP_DIRS[@]}"

__fpath_add "${DOTFILES}/zsh/zfunc" "${DOTFILES}/zsh/completions"
__autoload "${DOTFILES}/zsh/zfunc"

# Source files that are required early.
(( ${+DOT_SOURCES} )) && safe_source "${DOT_SOURCES[@]}"

#-------------------------------------------------- Lazyload functions -----------------------------------------------#

# Utility function, to merge arrays...
function merge_arrays {
    # undefined
    builtin autoload -X
}

function echoerr {
    # undefined
    builtin autoload -X
}

function sb2init {
    # undefined
    builtin autoload -X
}

#--------------------------------------------------------- Init ------------------------------------------------------#

# Run (bash)compinit for completions.
autoload -Uz compinit bashcompinit
compinit; bashcompinit;

# Load Bash completion scripts
if (( ${+DOT_BASH_COMPLETIONS})); then
    safe_source "${DOT_BASH_COMPLETIONS[@]}"
fi

# Assure required dirs and files exist.
assert_dirs "${DOT_DATA_DIR}"
assert_files "${DOT_DATA_DIR}/.zsh_history" "${DOT_DATA_DIR}/.mysql_history"

if (( ${+DOT_REQUIRED_DIRS} )); then
    assert_dirs "${DOT_REQUIRED_DIRS[@]}"
fi

if (( ${+DOT_REQUIRED_FILES} )); then
    assert_files "${DOT_REQUIRED_FILES[@]}"
fi

# Load plugins.
safe_source "${ZDOTDIR}/plugin-spec"

# Application init evaluations.
eval "$(rtx activate zsh)"
eval "$(zoxide init zsh)"
eval "$(teleport-dir init)"
eval "$(op completion zsh)"

export LS_COLORS="$(vivid generate jassie030)"

# Source late files like aliases etc.
if (( ${+DOT_AFTER_INIT_SOURCES} )); then
    safe_source "${DOT_AFTER_INIT_SOURCES[@]}"
fi

compdef _op op

# Init mcfly last.
eval "$(mcfly init zsh)"
