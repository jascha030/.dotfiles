---
gui:
  scrollHeight: 2
  scrollPastBottom: true
  scrollOffMargin: 2
  scrollOffBehavior: margin
  mouseEvents: false
  skipDiscardChangeWarning: false
  skipStashWarning: false
  skipNoStagedFilesWarning: false
  skipRewordInEditorWarning: false
  sidePanelWidth: 0.3333
  expandFocusedSidePanel: false  # If true, increase the height of the focused side window; creating an accordion effect.
  expandedSidePanelWeight: 2
  mainPanelSplitMode: flexible
  enlargedSideViewLocation: left
  wrapLinesInStagingView: true
  language: auto
  timeFormat: 02 Jan 06
  shortTimeFormat: 3:04PM
  theme:
    activeBorderColor: [green, bold]
    inactiveBorderColor: [default]
    searchingActiveBorderColor: [cyan, bold]
    optionsTextColor: [blue]
    selectedLineBgColor: [blue]
    inactiveViewSelectedLineBgColor: [bold]
    cherryPickedCommitFgColor: [blue]
    cherryPickedCommitBgColor: [cyan]
    markedBaseCommitFgColor: [blue]
    markedBaseCommitBgColor: [yellow]
    unstagedChangesColor: [red]
    defaultFgColor: [default]
  commitLength:
    show: true
  showListFooter: true
  showFileTree: true
  showNumstatInFilesView: false
  showRandomTip: true
  showCommandLog: true
  showBottomLine: true
  showPanelJumps: true
  showIcons: false
  # Nerd fonts version to use.
  # One of: '2' | '3' | empty string (default)
  # If empty, do not show icons.
  nerdFontsVersion: '3'
  # If true (default), file icons are shown in the file views. Only relevant if NerdFontsVersion is not empty.
  showFileIcons: true
  # Length of author name in (non-expanded) commits view. 2 means show initials only.
  commitAuthorShortLength: 2
  # Length of author name in expanded commits view. 2 means show initials only.
  commitAuthorLongLength: 17
  # Length of commit hash in commits view. 0 shows '*' if NF icons aren't on.
  commitHashLength: 8
  # If true, show commit hashes alongside branch names in the branches view.
  showBranchCommitHash: false
  # Whether to show the divergence from the base branch in the branches view.
  # One of: 'none' | 'onlyArrow'  | 'arrowAndNumber'
  showDivergenceFromBaseBranch: none
  # Height of the command log view
  commandLogSize: 8
  # Whether to split the main window when viewing file changes.
  # One of: 'auto' | 'always'
  # If 'auto', only split the main window when a file has both staged and unstaged changes
  splitDiff: auto
  # Default size for focused window. Can be changed from within Lazygit with '+' and '_' (but this won't change the default).
  # One of: 'normal' (default) | 'half' | 'full'
  screenMode: normal
  # Window border style.
  # One of 'rounded' (default) | 'single' | 'double' | 'hidden'
  border: rounded
  # If true, show a seriously epic explosion animation when nuking the working tree.
  animateExplosion: true
  # Whether to stack UI components on top of each other.
  # One of 'auto' (default) | 'always' | 'never'
  portraitMode: auto
  # How things are filtered when typing '/'.
  # One of 'substring' (default) | 'fuzzy'
  filterMode: substring
  # Config relating to the spinner.
  spinner:
    # The frames of the spinner animation.
    frames:
      - '|'
      - /
      - '-'
      - \

    # The "speed" of the spinner in milliseconds.
    rate: 50

  # Status panel view.
  # One of 'dashboard' (default) | 'allBranchesLog'
  statusPanelView: dashboard

  # If true, jump to the Files panel after popping a stash
  switchToFilesAfterStashPop: true

  # If true, jump to the Files panel after applying a stash
  switchToFilesAfterStashApply: true

  # If true, when using the panel jump keys (default 1 through 5) and target panel is already active, go to next tab instead
  switchTabsWithPanelJumpKeys: false
# Config relating to git
git:
  # See https://github.com/jesseduffield/lazygit/blob/master/docs/Custom_Pagers.md
  paging:
    # Value of the --color arg in the git diff command. Some pagers want this to be set to 'always' and some want it set to 'never'
    colorArg: always

    # e.g.
    # diff-so-fancy
    # delta --dark --paging=never
    # ydiff -p cat -s --wrap --width={{columnWidth}}
    pager: ''

    # If true, Lazygit will use whatever pager is specified in `$GIT_PAGER`, `$PAGER`, or your *git config*. If the pager ends with something like ` | less` we will strip that part out, because less doesn't play nice with our rendering approach. If the custom pager uses less under the hood, that will also break rendering (hence the `--paging=never` flag for the `delta` pager).
    useConfig: false

    # e.g. 'difft --color=always'
    externalDiffCommand: ''

  # Config relating to committing
  commit:
    signOff: false
    autoWrapCommitMessage: true
    autoWrapWidth: 72
  merging:
    # If true, run merges in a subprocess so that if a commit message is required, Lazygit will not hang
    # Only applicable to unix users.
    manualCommit: false
    args: ''
    # The commit message to use for a squash merge commit. Can contain "{{selectedRef}}" and "{{currentBranch}}" placeholders.
    squashMergeMessage: Squash merge {{selectedRef}} into {{currentBranch}}
  # list of branches that are considered 'main' branches, used when displaying commits
  mainBranches:
    - master
    - main
  # Prefix to use when skipping hooks. E.g. if set to 'WIP', then pre-commit hooks will be skipped when the commit message starts with 'WIP'
  skipHookPrefix: WIP
  # If true, periodically fetch from remote
  autoFetch: true
  # If true, periodically refresh files and submodules
  autoRefresh: true
  # If true, pass the --all arg to git fetch
  fetchAll: true
  # If true, lazygit will automatically stage files that used to have merge
  # conflicts but no longer do; and it will also ask you if you want to
  # continue a merge or rebase if you've resolved all conflicts. If false, it
  # won't do either of these things.
  autoStageResolvedConflicts: true
  # Command used when displaying the current branch git log in the main window
  branchLogCmd: git log --graph --color=always --abbrev-commit --decorate --date=relative
    --pretty=medium {{branchName}} --
  # Command used to display git log of all branches in the main window.
  # Deprecated: Use `allBranchesLogCmds` instead.
  allBranchesLogCmd: git log --graph --all --color=always --abbrev-commit --decorate
    --date=relative  --pretty=medium
  # If true, do not spawn a separate process when using GPG
  overrideGpg: false
  # If true, do not allow force pushes
  disableForcePushing: false
  parseEmoji: true
  # Config for showing the log in the commits view
  log:
    # One of: 'date-order' | 'author-date-order' | 'topo-order' | 'default'
    # 'topo-order' makes it easier to read the git log graph, but commits may not
    # appear chronologically. See https://git-scm.com/docs/
    # Deprecated: Configure this with `Log menu -> Commit sort order` (<c-l> in the commits window by default).
    order: topo-order
    # This determines whether the git graph is rendered in the commits panel
    # One of 'always' | 'never' | 'when-maximised'
    # Deprecated: Configure this with `Log menu -> Show git graph` (<c-l> in the commits window by default).
    showGraph: always
    # displays the whole git graph by default in the commits view (equivalent to passing the `--all` argument to `git log`)
    showWholeGraph: false
  # When copying commit hashes to the clipboard, truncate them to this
  # length. Set to 40 to disable truncation.
  truncateCopiedCommitHashesTo: 12
# Periodic update checks
update:
  # One of: 'prompt' (default) | 'background' | 'never'
  method: prompt
  # Period in days between update checks
  days: 14
refresher:
  refreshInterval: 10
  fetchInterval: 60
confirmOnQuit: false
quitOnTopLevelReturn: false
os:
  edit: ''
  editAtLine: ''
  editAtLineAndWait: ''
  openDirInEditor: ''
  editPreset: ''
  open: ''
  openLink: ''
  editCommand: ''
  editCommandTemplate: ''
  openCommand: ''
  openLinkCommand: ''
  copyToClipboardCmd: ''
  readFromClipboardCmd: ''
disableStartupPopups: false
notARepository: prompt
promptToReturnFromSubprocess: true
