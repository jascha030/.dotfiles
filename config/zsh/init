#!/usr/bin/env zsh

#---------------------------------------------------------------------------------------------------------------------#
#                                                    Dotfiles                                                         #
# By Jascha030                                                                  https://github.io/jascha030/.dotfiles #
#---------------------------------------------------------------------------------------------------------------------#

# Alternative dir for histfiles
! (( ${+DOT_DATA_DIR} )) && export DOT_DATA_DIR="$XDG_CONFIG_HOME"/datafiles
# Prompt height in lines
! (( DOT_PROMPT_HEIGHT )) && export DOT_PROMPT_HEIGHT=2
# Conditionals, if current term is in neovim .
if (( ${+VIM} && ${+VIMRUNTIME} && ${+MYVIMRC} )); then
    export _IS_VIMTERM=true
    export LOL_MSG="$DOT_NEOVIM_LOL_MSG"
else
    export _IS_VIMTERM=false
    export LOL_MSG="$DOT_DEFAULT_LOL_MSG"
fi

#- Internally used functions -----------------------------------------------------------------------------------------#

function __fpath_add {
    fpath=( "$@" "${fpath[@]}" )
}

function __path_add {
    path=( "$@" "${path[@]}" )
}

function __autoload {
    local a

    for a in "$@"; do
        [[ -d "$a" ]] && autoload -Uz "$a"/*(.:t)
    done
}

#- All credits to: https://github.com/mroth/evalcache ----------------------------------------------------------------#

function _evalcache () {
    local cmdHash="nohash" data="$*" name

    # use the first non-variable argument as the name
    for name in "$@"; do
        if [ "$name" = "${name#[A-Za-z_][A-Za-z0-9_]*=}" ]; then
            break
        fi
    done

    # if command is a function, include its definition in data
    if typeset -f "$name" > /dev/null; then
        data=${data}$(typeset -f "$name")
    fi

    if builtin command -v md5 > /dev/null; then
        cmdHash=$(echo -n "$data" | md5)
    elif builtin command -v md5sum > /dev/null; then
        cmdHash=$(echo -n "$data" | md5sum | cut -d' ' -f1)
    fi

    local cacheFile="$ZSH_EVALCACHE_DIR/init-${name##*/}-${cmdHash}.sh"

    if [ "$ZSH_EVALCACHE_DISABLE" = "true" ]; then
        eval "${(q)@}"
    elif [ -s "$cacheFile" ]; then
        source "$cacheFile"
    else
        if type "$name" > /dev/null; then
            echo "evalcache: ${name} initialization not cached, caching output of: $*" >&2
            mkdir -p "$ZSH_EVALCACHE_DIR"
            eval "${(q)@}" > "$cacheFile"
            source "$cacheFile"
        else
            echo "evalcache: ERROR: ${name} is not installed or in PATH" >&2
        fi
    fi
}

# Taken from https://github.com/mroth/evalcache
function _evalcache_clear () {
    rm -i "$ZSH_EVALCACHE_DIR"/init-*.sh
}

#- Init --------------------------------------------------------------------------------------------------------------#
if (( ${+DOT_COMP_DIRS} )); then
    __fpath_add "${DOT_COMP_DIRS[@]}"
fi

__fpath_add "${ZDOTDIR}/zfunc" "${ZDOTDIR}/completions"
__autoload "${ZDOTDIR}/zfunc"
__fpath_add "/opt/homebrew/share/zsh/site-functions"

# Source files that are required early.
(( ${+DOT_SOURCES} )) && safe_source "${DOT_SOURCES[@]}"

#- Lazyload functions ------------------------------------------------------------------------------------------------#

function merge_arrays {
    # undefined
    builtin autoload -X
}

#- Init --------------------------------------------------------------------------------------------------------------#

# Assure required dirs and files exist.
assert_dirs "$DOT_DATA_DIR"
assert_files "${DOT_DATA_DIR}/.zsh_history" "${DOT_DATA_DIR}/.mysql_history"

if (( ${+DOT_REQUIRED_DIRS} )); then
    assert_dirs "${DOT_REQUIRED_DIRS[@]}"
fi

if (( ${+DOT_REQUIRED_FILES} )); then
    assert_files "${DOT_REQUIRED_FILES[@]}"
fi

# Run (bash)compinit for completions.
autoload -Uz compinit
for dump in "$ZDOTDIR"/.zcompdump(N.mh+24); do
    compinit
done
compinit -C

autoload -U +X bashcompinit && bashcompinit
if (( ${+DOT_BASH_COMPLETIONS})); then
    safe_source "${DOT_BASH_COMPLETIONS[@]}"
fi

# Load plugins.
safe_source "$ZDOTDIR"/plugins-spec
[[ ${ZDOTDIR}/.zcompdump.zwc -nt ${ZDOTDIR}/.zcompdump ]] || zcompile-many "$ZDOTDIR"/.zcompdump
unfunction zcompile-many

export ZSH_AUTOSUGGEST_MANUAL_REBIND=1

#- Application init evaluations --------------------------------------------------------------------------------------#

# eval "$(mise activate zsh)"
_evalcache /opt/homebrew/bin/brew shellenv
_evalcache opam env

path=(
    "${DOT_PATH_VAR[@]}"
    "${path[@]}"
); typeset -aU path


_evalcache zoxide init zsh
_evalcache teleport-dir init
_evalcache symfony-autocomplete composer
_evalcache symfony-autocomplete valet
_evalcache symfony-autocomplete phpactor
_evalcache op completion zsh

#- Source late files like aliases etc --------------------------------------------------------------------------------#
if (( ${+DOT_AFTER_INIT_SOURCES} )); then
    safe_source "${DOT_AFTER_INIT_SOURCES[@]}"
fi

compdef _composer __icomposer vcomposer
compdef _op op

source "$ZDOTDIR"/aliases

#- Display flashy, painstakingly crafted intro screen ----------------------------------------------------------------#
if [[ -o login ]] && [[ -t 0 ]]; then 
    [ -f "${HOME}/.lolmsgrc" ] && . "${HOME}/.lolmsgrc" || echo 'export LOLMSGRC_ENABLED=1' > "${HOME}/.lolmsgrc"
    [[ "$LOLMSGRC_ENABLED" -eq 1 ]] && lolmsg "$LOL_MSG" "$DOT_PROMPT_HEIGHT"
fi

#- Load flashy, painstakingly crafted shell prompt -------------------------------------------------------------------#
source "$ZDOTDIR"/prompt/prompt

#- Init mcfly history last -------------------------------------------------------------------------------------------#
_evalcache mcfly init zsh

#- And finally, unfunc locally used functions ------------------------------------------------------------------------#
unfunction _evalcache
unfunction __fpath_add
unfunction __path_add 
unfunction __autoload 
