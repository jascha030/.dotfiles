#!/usr/bin/env bash

cmd=${0##*/}
version='1.0.0'

__bak-echo() {
    command printf %b\\n "$*" 2>/dev/null
}

__bak-header() {
    __bak-echo "${cmd} \e[0;36mv${version}\e[0m"
    __bak-echo ""
    __bak-echo "Quickly backup a file as <filename>.BAK."
    __bak-echo ""
}

__bak-usage() {
    __bak-echo "${cmd} \e[0;36m[-h|--help]\e[0m \e[0;36m[-m|--move]\e[0m \e[0;92m<filepath>\e[0m"
    __bak-echo ""
    __bak-echo "Options:"
    __bak-echo "  -h, --help      Show this help message and exit"
    __bak-echo "  -m, --move      Move the original file instead of making a copy"
    __bak-echo "  -v, --version   Show version number and exit"
}

bak__help() {
    __bak-header
    __bak-usage
}

__bak-move-file() {
    local file="$1"

    if [ -f "$file" ] || [ -d "$file" ]; then
        mv "$file" "${PWD}/${file}.BAK"

        __bak-echo "Moved $file to $file.BAK"
    else
        __bak-echo "\e[0;31mERROR: $file does not exist.\e[0m"
    fi
}

__bak-backup-file() {
    local file="$1"

    if [ -f "$file" ] || [ -d "$file" ]; then
        cp -pr "$file" "${PWD}/${file}.BAK"

        __bak-echo "Backup of $file saved as $file.BAK"
    else
        __bak-echo "\e[0;31mERROR: $file does not exist.\e[0m"
    fi
}

bak() {
    local h="${cmd}__help"

    if [[ $# -eq 0 ]]; then
        "$h"
        return 1
    fi

    local move=0

    local i
    for i in "$@"; do
        case $i in
        --) break ;;
        '-h' | '--help' | 'help')
            # Print full help info with CLI header.
            "${cmd}__help"
            return 0
            ;;
        '-m' | '--move')
            shift
            move=1
            ;;
        '-v' | '--version')
            # Print version number.
            "__${cmd}-echo" "v${version}"
            return 0
            ;;
        esac
    done

    if [ "$move" -eq 1 ]; then
        __bak-move-file "$1"
        return 0
    fi

    __bak-backup-file "$1"
    return 0
}

bak "$@"
