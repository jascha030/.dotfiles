#!/usr/bin/env bash

cmd=${0##*/}
version='1.0.0'

__logtail-echo() {
	command printf %b\\n "$*" 2>/dev/null
}

__logtail-tail() {
	local bin
	bin=$(which cat)

	if command -v bat &>/dev/null; then
		bin=$(which bat)
		bin="${bin} --paging=never -l log"
	fi

	tail -f -72 "$@" | $bin
}

__logtail-header() {
	__logtail-echo "\e[0;92m#       ####   ####  #####   ##   # #      \e[0m"
	__logtail-echo "\e[0;92m#      #    # #    #   #    #  #  # #      \e[0m"
	__logtail-echo "\e[0;92m#      #    # #        #   #    # # #      \e[0m"
	__logtail-echo "\e[0;92m#      #    # #  ###   #   ###### # #      \e[0m"
	__logtail-echo "\e[0;92m#      #    # #    #   #   #    # # #      \e[0m"
	__logtail-echo "\e[0;92m######  ####   ####    #   #    # # ###### \e[0m"

	__logtail-echo ""
	__logtail-echo "\e[0;36mv${version}\e[0m"
	__logtail-echo ""

	__logtail-echo "A wrapper using \e[0;33mtail\e[0m and \e[0;33mbat\e[0m to monitor log-files with sensible default options."
	__logtail-echo ""
}

__logtail-usage() {
	__logtail-echo "Usage:"
	__logtail-echo "    \e[0;92m${cmd}\e[0m \e[0;36m[-h|--help]\e[0m \e[0;92m<filepath>\e[0m"
	__logtail-echo ""
}

logtail() {
	if [[ $# -eq 0 ]]; then
		__logtail-usage
		return
	fi

	if [[ -z $1 ]]; then
		__logtail-echo "\e[0;31mERROR: No file specified\e[0m"
		# Print usage help info without CLI header.
		__logtail-usage
		exit 1
	fi

	local i
	for i in "$@"; do
		case $i in
		--) break ;;
		'-h' | '--help' | 'help')
			# Print full help info with CLI header.
			__logtail-header
			__logtail-usage
			return 0
			;;
		esac
	done

	__logtail-tail "$@"
}

logtail "$@"
